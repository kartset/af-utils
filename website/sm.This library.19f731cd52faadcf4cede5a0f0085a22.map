{"version":3,"sources":["webpack:///./lib/models/ScrollableRowsBase.js","webpack:///./lib/models/VariableSizeScrollableRows.js","webpack:///./lib/models/FixedSizeScrollableRows.js","webpack:///./lib/Context.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/RowsSimple.js","webpack:///./lib/models/createList.js","webpack:///./lib/models/SegmentsTree.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/utils/cx/index.js","webpack:///./lib/useApi/index.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/List/index.js"],"names":["_class","createContext","useStore","StoreConstructor","dataRef","propsToMerge","scrollContainerRef","useRef","rowsContainerRef","finalDataRef","Store","current","useLayoutEffect","merge","Object","assign","rowsContainerNode","scrollContainerNode","useEffect","destructor","RowsSimple","parent","this","_createClass","key","get","rows","length","createList","BaseClass","_BaseClass","call","_inheritsLoose","getRowDataInitial","Error","ScrollableRowsBase","_proto","prototype","RowsConstructor","extendObservable","overscanRowsCount","estimatedRowHeight","scrollLeft","scrollTop","widgetHeight","widgetWidth","getRowKey","undefined","getRowData","observable","ref","Rows","params","getVisibleRangeStart","newVisibleStartIndex","visibleRangeStart","Math","max","newEndIndex","min","visibleRowCount","_this$visibleRangeSta2","remainder","overscanOffset","getDistanceBetweenIndexes","startIndex","scrollToRow","index","node","clamp","scrollToStart","_applyDecoratedDescriptor","computed","getOwnPropertyDescriptor","action","SegmentsTree","minCacheOffset","cacheSize","N","cache","Uint32Array","l","Infinity","r","reallocateIfNeeded","defaultValue","currentCacheSize","newN","log2","fill","reset","calculateParentsInRange","endIndex","i","set","value","flush","Number","isFinite","getStartPositionForSum","dist","v","nodeIndex","res","_ScrollableRowsBase","VariableSizeScrollableRows","_this","rowsDomObserver","MutationObserver","runInAction","lastRowsRenderTimeStamp","performance","now","disposeCallbacks","sTree","_assertThisInitialized","widgetScrollHeight","shouldResetInvisibleRowHeights","push","autorun","syncWidgetScrollHeight","delay","disconnect","observe","childList","subtree","newHeight","rowHeightsSum","rowCounter","child","firstElementChild","nextElementSibling","parseInt","getAttribute","offsetHeight","round","total","forEach","cb","FixedSizeScrollableRows","dispose","desctructor","distance","cx","baseClass","extraClass","useApi","useContext","Context","el","React","createElement","className","observer","cloneElement","style","height","ScrollContainer","forwardRef","_ref","children","onScroll","props","_objectWithoutPropertiesLoose","API","scrollHandler","useCallback","e","_e$target","target","R","ResizeObserver","entries","_entries$0$target","offsetWidth","unobserve","_extends","tabIndex","HeightProvider","getPropsGetter","propName","data","dataIndex","getExtraProps","_props","extraProps","getRowProps","Row","getRowExtraProps","rowIndex","rowData","propTypes","RowComponent","_useApi","rangeFrom","rangeTo","rowKey","result","getVisibleRows","Component","virtualTopOffset","commonDefaultProps","fixedSize","List","_ref$RowComponent","RowComponentDefault","_useStore","FixedSizeListStore","VariableSizeListStore","Provider","Scroller","defaultProps","memo"],"mappings":"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","file":"This library.22b2811196efdee2fb92.js","sourcesContent":["import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { extendObservable, computed, action, observable } from \"mobx\";\nimport clamp from \"lodash/clamp\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar ScrollableRowsBase = (_class = /*#__PURE__*/function () {\n  var _proto = ScrollableRowsBase.prototype;\n\n  _proto.merge = function merge(params) {\n    Object.assign(this, params);\n  };\n\n  _createClass(ScrollableRowsBase, [{\n    key: \"visibleRangeStart\",\n    get: function get() {\n      return this.getVisibleRangeStart(this.scrollTop);\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$visibleRangeSta = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta[0];\n      return Math.max(0, newVisibleStartIndex - this.overscanRowsCount);\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$getVisibleRange = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n          newEndIndex = _this$getVisibleRange[0];\n      /*\r\n          getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\r\n          but for endIndex we need \"<=\", so adding 1 artificially.\r\n      */\n\n\n      return Math.min(newEndIndex + 1 + this.overscanRowsCount, this.Rows.visibleRowCount);\n    }\n  }, {\n    key: \"virtualTopOffset\",\n    get: function get() {\n      var _this$visibleRangeSta2 = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta2[0],\n          remainder = _this$visibleRangeSta2[1];\n      var overscanOffset = this.getDistanceBetweenIndexes(this.startIndex, newVisibleStartIndex);\n      return this.scrollTop - remainder - overscanOffset;\n    }\n  }]);\n\n  function ScrollableRowsBase(RowsConstructor) {\n    extendObservable(this, {\n      rows: [],\n      overscanRowsCount: 0,\n      estimatedRowHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      widgetHeight: 0,\n      widgetWidth: 0,\n      getRowKey: undefined,\n      getRowData: getRowDataInitial,\n      rowsContainerNode: null,\n      scrollContainerNode: null\n    }, {\n      rowsContainerNode: observable.ref,\n      scrollContainerNode: observable.ref\n    });\n    this.Rows = new RowsConstructor(this);\n  }\n\n  _proto.destructor = function destructor() {};\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      node.scrollTop = this.getDistanceBetweenIndexes(0, clamp(index, 0, this.Rows.visibleRowCount));\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ScrollableRowsBase;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"visibleRangeStart\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"visibleRangeStart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"startIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"startIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"endIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"endIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"virtualTopOffset\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"virtualTopOffset\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"merge\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"merge\"), _class.prototype)), _class);\n;\nexport default ScrollableRowsBase;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _temp;\n\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nimport SegmentsTree from \"./SegmentsTree\";\nimport { extendObservable, autorun, action, runInAction } from \"mobx\";\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 200;\nvar VariableSizeScrollableRows = (_class = (_temp = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(VariableSizeScrollableRows, _ScrollableRowsBase);\n\n  var _proto = VariableSizeScrollableRows.prototype;\n\n  _proto.syncWidgetScrollHeight = function syncWidgetScrollHeight() {\n    this.widgetScrollHeight = this.sTree.total;\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var widgetScrollHeight = this.widgetScrollHeight,\n        estimatedRowHeight = this.estimatedRowHeight,\n        sTree = this.sTree;\n\n    if (widgetScrollHeight && estimatedRowHeight) {\n      return sTree.getStartPositionForSum(dist);\n    }\n\n    return [0, 0];\n  };\n\n  function VariableSizeScrollableRows(RowsConstructor) {\n    var _this;\n\n    _this = _ScrollableRowsBase.call(this, RowsConstructor) || this;\n    _this.rowsDomObserver = new MutationObserver(function () {\n      return runInAction(function () {\n        _this.lastRowsRenderTimeStamp = performance.now();\n      });\n    });\n    _this.disposeCallbacks = [];\n    _this.sTree = new SegmentsTree();\n    extendObservable(_assertThisInitialized(_this), {\n      widgetScrollHeight: 0,\n      lastRowsRenderTimeStamp: 0,\n\n      /*\r\n          When all row heights are different,\r\n          we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\r\n          basing on what we know: heights between startIndex and endIndex.\r\n          Using simple average by default.\r\n      */\n      shouldResetInvisibleRowHeights: true\n    });\n\n    _this.disposeCallbacks.push(autorun(function () {\n      _this.sTree.reallocateIfNeeded(_this.rows.length, _this.estimatedRowHeight);\n\n      _this.syncWidgetScrollHeight();\n    }), autorun(function () {\n      if (_this.widgetWidth) {\n        _this.merge({\n          shouldResetInvisibleRowHeights: true\n        });\n      }\n    }, {\n      delay: 200\n    }), autorun(function () {\n      _this.rowsDomObserver.disconnect();\n\n      if (_this.rowsContainerNode) {\n        _this.rowsDomObserver.observe(_this.rowsContainerNode, {\n          childList: true,\n          subtree: true\n        });\n      }\n    }), autorun(function () {\n      var node = _this.rowsContainerNode;\n\n      if (node && _this.lastRowsRenderTimeStamp) {\n        var _assertThisInitialize = _assertThisInitialized(_this),\n            sTree = _assertThisInitialize.sTree;\n\n        var rowHeightsSum = 0,\n            rowCounter = 0;\n        /*\r\n            Some benchmarks inspire me to use nextElementSibling\r\n            https://jsperf.com/nextsibling-vs-childnodes-increment/2\r\n        */\n\n        for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n          /*\r\n              * aria-rowindex is counted from 1 according to w3c spec;\r\n              * parseInt with radix is 2x faster, then +, -, etc.\r\n                  https://jsperf.com/number-vs-parseint-vs-plus/116\r\n          */\n          index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n          if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n            throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n          }\n\n          newHeight = child.offsetHeight;\n          rowHeightsSum += newHeight;\n          sTree.set(index, newHeight);\n        }\n\n        if (_this.shouldResetInvisibleRowHeights) {\n          _this.merge({\n            estimatedRowHeight: Math.round(rowHeightsSum / rowCounter),\n            shouldResetInvisibleRowHeights: false\n          });\n        } else if (sTree.flush()) {\n          _this.syncWidgetScrollHeight();\n        }\n      }\n    }, {\n      delay: ROW_MEASUREMENT_DEBOUNCE_INTERVAL\n    }));\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.disposeCallbacks.forEach(function (cb) {\n      return cb();\n    });\n\n    _ScrollableRowsBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    if (!this.estimatedRowHeight) {\n      return 0;\n    }\n\n    return this.sTree.getDistanceBetweenIndexes(startIndex, endIndex);\n  };\n\n  return VariableSizeScrollableRows;\n}(ScrollableRowsBase), _temp), (_applyDecoratedDescriptor(_class.prototype, \"syncWidgetScrollHeight\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"syncWidgetScrollHeight\"), _class.prototype)), _class);\n;\nexport default VariableSizeScrollableRows;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { computed, autorun } from \"mobx\";\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nvar FixedSizeScrollableRows = (_class = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(FixedSizeScrollableRows, _ScrollableRowsBase);\n\n  function FixedSizeScrollableRows(RowsConstructor) {\n    var _this;\n\n    _this = _ScrollableRowsBase.call(this, RowsConstructor) || this;\n    _this.dispose = autorun(function () {\n      if (_this.widgetWidth) {\n        var node = _this.rowsContainerNode;\n\n        if (node) {\n          var firstElementChild = node.firstElementChild;\n\n          if (firstElementChild) {\n            _this.estimatedRowHeight = firstElementChild.offsetHeight;\n          }\n        }\n      }\n    }, {\n      delay: 200\n    });\n    return _this;\n  }\n\n  var _proto = FixedSizeScrollableRows.prototype;\n\n  _proto.desctructor = function desctructor() {\n    this.dispose();\n\n    _ScrollableRowsBase.prototype.destructor.call(this);\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return estimatedRowHeight ? [distance / estimatedRowHeight | 0, distance % estimatedRowHeight] : [0, 0];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  _createClass(FixedSizeScrollableRows, [{\n    key: \"widgetScrollHeight\",\n    get: function get() {\n      return this.estimatedRowHeight * this.Rows.visibleRowCount;\n    }\n  }]);\n\n  return FixedSizeScrollableRows;\n}(ScrollableRowsBase), (_applyDecoratedDescriptor(_class.prototype, \"widgetScrollHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"widgetScrollHeight\"), _class.prototype)), _class);\n;\nexport default FixedSizeScrollableRows;","import { createContext } from \"react\";\nexport default /*#__PURE__*/createContext();","import { useRef, useEffect, useLayoutEffect } from \"react\";\n/*\r\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\r\n    As it is not dom-related, I decided to avoid forwardRef\r\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef, propsToMerge) {\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useLayoutEffect(function () {\n    Store.merge(Object.assign({}, propsToMerge, {\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    }));\n  });\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return [Store, scrollContainerRef, rowsContainerRef];\n};\n\nexport default useStore;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { computed } from \"mobx\";\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\n\nvar RowsSimple = /*#__PURE__*/function () {\n  function RowsSimple(parent) {\n    this.parent = parent;\n  }\n\n  _createClass(RowsSimple, [{\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.parent.rows.length;\n    }\n  }]);\n\n  return RowsSimple;\n}();\n\nexport default RowsSimple;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport RowsSimple from \"./RowsSimple\";\n\nvar createList = function createList(BaseClass) {\n  return /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_class, _BaseClass);\n\n    function _class() {\n      return _BaseClass.call(this, RowsSimple) || this;\n    }\n\n    return _class;\n  }(BaseClass);\n};\n\nexport default createList;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar SegmentsTree = /*#__PURE__*/function () {\n  function SegmentsTree(minCacheOffset) {\n    this.minCacheOffset = minCacheOffset || 15;\n    this.cacheSize = 0;\n    this.N = 0;\n    this.cache = new Uint32Array(1);\n    this.l = +Infinity;\n    this.r = -Infinity;\n  }\n\n  var _proto = SegmentsTree.prototype;\n\n  _proto.reallocateIfNeeded = function reallocateIfNeeded(cacheSize, defaultValue) {\n    var currentCacheSize = this.cacheSize;\n\n    if (cacheSize !== currentCacheSize) {\n      this.cacheSize = cacheSize;\n      var newN = 2 << Math.log2(cacheSize, this.minCacheOffset);\n\n      if (newN !== this.N) {\n        this.N = newN;\n        this.cache = new Uint32Array(newN << 1);\n      } else if (currentCacheSize > cacheSize) {\n        this.cache.fill(0, newN + cacheSize, newN + currentCacheSize);\n      }\n    }\n\n    this.reset(defaultValue);\n  };\n\n  _proto.reset = function reset(defaultValue) {\n    var cache = this.cache,\n        N = this.N,\n        cacheSize = this.cacheSize;\n    cache.fill(defaultValue, N, N + cacheSize);\n    this.calculateParentsInRange(0, cacheSize);\n  };\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var cache = this.cache,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        cache[i] = cache[i << 1] + cache[i << 1 | 1];\n      }\n    }\n  };\n\n  _proto.set = function set(index, value) {\n    var cache = this.cache,\n        N = this.N;\n\n    if (cache[N + index] !== value) {\n      cache[N + index] = value;\n      this.l = Math.min(this.l, index);\n      this.r = Math.max(this.r, index);\n    }\n  };\n\n  _proto.flush = function flush() {\n    var l = this.l,\n        r = this.r;\n\n    if (!Number.isFinite(l)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.log(\"Updating heights in range: %d - %d\", l, r);\n      }\n\n      this.calculateParentsInRange(l, r);\n      this.l = +Infinity;\n      this.r = -Infinity;\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.getStartPositionForSum = function getStartPositionForSum(dist) {\n    var cache = this.cache,\n        N = this.N;\n    var nodeIndex = 1,\n        v;\n\n    while (nodeIndex < N) {\n      v = cache[nodeIndex <<= 1];\n\n      if (dist >= v) {\n        dist -= v;\n        nodeIndex |= 1;\n      }\n    }\n\n    return [nodeIndex - N, dist];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    var cache = this.cache,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += cache[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += cache[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  _createClass(SegmentsTree, [{\n    key: \"total\",\n    get: function get() {\n      return this.cache[1];\n    }\n  }]);\n\n  return SegmentsTree;\n}();\n\nexport default SegmentsTree;","import createList from \"./createList\";\nimport VariableSizeScrollableRows from \"./VariableSizeScrollableRows\";\nexport default createList(VariableSizeScrollableRows);","import createList from \"./createList\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default createList(FixedSizeScrollableRows);","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;","import { useContext } from \"react\";\nimport Context from \"../Context\";\n\nvar useApi = function useApi() {\n  return useContext(Context);\n};\n\nexport default useApi;","import React, { cloneElement } from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  return /*#__PURE__*/cloneElement(el, {\n    style: {\n      height: useApi().widgetScrollHeight\n    }\n  });\n};\n\nexport default observer(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nvar ScrollContainer = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\"]);\n\n  var API = useApi();\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.merge({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        /*\r\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \r\n            and { box: border-box } option does not work here\r\n        */\n        var _entries$0$target = entries[0].target,\n            offsetWidth = _entries$0$target.offsetWidth,\n            offsetHeight = _entries$0$target.offsetHeight;\n        API.merge({\n          widgetHeight: Math.round(offsetHeight),\n          widgetWidth: Math.round(offsetWidth)\n        });\n      }\n    });\n    R.observe(el);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\r\n      tabIndex=\"0\" is for proper keyboard nav\r\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\r\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, dataIndex, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index, dataIndex);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = getPropsGetter(\"aria-colindex\");","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n\n  var _useApi = useApi(),\n      startIndex = _useApi.startIndex,\n      endIndex = _useApi.endIndex,\n      getRowData = _useApi.getRowData,\n      getRowKey = _useApi.getRowKey;\n\n  return getVisibleRows(startIndex, endIndex, getRowData, getRowKey, getRowExtraProps, RowComponent);\n};\n\nexport default observer(Rows);","import React from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApi = useApi(),\n      virtualTopOffset = _useApi.virtualTopOffset;\n  /*\r\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default observer(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rows: [],\n  overscanRowsCount: 4,\n  estimatedRowHeight: 16\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      rows = _ref.rows,\n      overscanRowsCount = _ref.overscanRowsCount,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"estimatedRowHeight\", \"rows\", \"overscanRowsCount\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef, {\n    getRowData: getRowData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeight: estimatedRowHeight,\n    rows: rows\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      rowsContainerRef = _useStore[2];\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))));\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? commonPropTypes : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\r\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\r\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\r\n      memo(observer(RowComponentDefault)) will do the trick.\r\n  */\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault)\n});\nexport default /*#__PURE__*/memo(List);"],"sourceRoot":""}