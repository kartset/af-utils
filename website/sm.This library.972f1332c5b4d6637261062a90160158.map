{"version":3,"sources":["webpack:///./lib/models/ScrollableRowsBase.js","webpack:///./lib/models/VariableSizeScrollableRows.js","webpack:///./lib/models/FixedSizeScrollableRows.js","webpack:///./lib/Context.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/RowsSimple.js","webpack:///./lib/models/createList.js","webpack:///./lib/models/SegmentsTree.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/utils/cx/index.js","webpack:///./lib/useApi/index.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/List/index.js"],"names":["_class","createContext","useStore","StoreConstructor","dataRef","propsToMerge","scrollContainerRef","useRef","rowsContainerRef","finalDataRef","Store","current","useLayoutEffect","merge","Object","assign","rowsContainerNode","scrollContainerNode","useEffect","destructor","RowsSimple","parent","this","_createClass","key","get","rows","length","createList","BaseClass","_BaseClass","call","_inheritsLoose","BASIC_OBSERVABLE_FIELDS","overscanRowsCount","estimatedRowHeightFallback","scrollLeft","scrollTop","widgetHeight","widgetWidth","getRowKey","undefined","getRowData","Error","ScrollableRowsBase","_proto","prototype","RowsConstructor","extendObservable","observable","ref","Rows","params","getVisibleRangeStart","estimatedRowHeight","newVisibleStartIndex","visibleRangeStart","Math","max","newEndIndex","min","visibleRowCount","_this$visibleRangeSta2","remainder","overscanOffset","getDistanceBetweenIndexes","startIndex","scrollToRow","index","node","clamp","scrollToStart","_applyDecoratedDescriptor","computed","getOwnPropertyDescriptor","action","SegmentsTree","minCacheOffset","cacheSize","N","cache","Uint32Array","reallocateIfNeeded","defaultValue","currentCacheSize","newN","log2","getN","fill","reset","calculateParentsInRange","endIndex","i","set","value","getStartPositionForSum","dist","v","nodeIndex","res","_ScrollableRowsBase","VariableSizeScrollableRows","_this","rowsDomObserver","MutationObserver","runInAction","lastRowsRenderTimeStamp","performance","now","disposeCallbacks","sTree","_assertThisInitialized","widgetScrollHeight","shouldResetInvisibleRowHeights","push","reaction","h","fireImmediately","autorun","syncWidgetScrollHeight","delay","disconnect","observe","childList","subtree","newHeight","l","r","rowHeightsSum","rowCounter","child","firstElementChild","nextElementSibling","parseInt","getAttribute","offsetHeight","round","height","forEach","cb","FixedSizeScrollableRows","apply","arguments","distance","cx","baseClass","extraClass","useApi","useContext","Context","el","React","createElement","className","observer","cloneElement","style","ScrollContainer","forwardRef","_ref","children","onScroll","props","_objectWithoutPropertiesLoose","API","scrollHandler","useCallback","e","_e$target","target","R","ResizeObserver","entries","_entries$0$target","offsetWidth","unobserve","_extends","tabIndex","HeightProvider","getPropsGetter","propName","data","dataIndex","getExtraProps","_props","extraProps","getRowProps","Row","getRowExtraProps","rowIndex","rowData","propTypes","RowComponent","_useApi","rangeFrom","rangeTo","rowKey","result","getVisibleRows","Component","virtualTopOffset","commonDefaultProps","fixedSize","List","_ref$RowComponent","RowComponentDefault","_useStore","FixedSizeListStore","VariableSizeListStore","Provider","Scroller","defaultProps","memo"],"mappings":"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","file":"This library.6df324c8b73fabf1c600.js","sourcesContent":["import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { extendObservable, computed, action, observable } from \"mobx\";\nimport clamp from \"lodash/clamp\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar BASIC_OBSERVABLE_FIELDS = {\n  rows: [],\n  overscanRowsCount: 0,\n  estimatedRowHeightFallback: 0,\n  scrollLeft: 0,\n  scrollTop: 0,\n  widgetHeight: 0,\n  widgetWidth: 0,\n  getRowKey: undefined,\n  getRowData: getRowDataInitial,\n  rowsContainerNode: null,\n  scrollContainerNode: null\n};\nvar END_INDEX_CHECK_INTERVAL = 400;\nvar ScrollableRowsBase = (_class = /*#__PURE__*/function () {\n  var _proto = ScrollableRowsBase.prototype;\n\n  _proto.merge = function merge(params) {\n    Object.assign(this, params);\n  };\n\n  _createClass(ScrollableRowsBase, [{\n    key: \"visibleRangeStart\",\n    get: function get() {\n      return this.getVisibleRangeStart(this.scrollTop);\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$visibleRangeSta = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta[0];\n      return Math.max(0, newVisibleStartIndex - this.overscanRowsCount);\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$getVisibleRange = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n          newEndIndex = _this$getVisibleRange[0];\n      /*\r\n          getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\r\n          but for endIndex we need \"<=\", so adding 1 artificially.\r\n      */\n\n\n      return Math.min(newEndIndex + 1 + this.overscanRowsCount, this.Rows.visibleRowCount);\n    }\n  }, {\n    key: \"virtualTopOffset\",\n    get: function get() {\n      var _this$visibleRangeSta2 = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta2[0],\n          remainder = _this$visibleRangeSta2[1];\n      var overscanOffset = this.getDistanceBetweenIndexes(this.startIndex, newVisibleStartIndex);\n      return this.scrollTop - remainder - overscanOffset;\n    }\n  }]);\n\n  function ScrollableRowsBase(RowsConstructor) {\n    extendObservable(this, BASIC_OBSERVABLE_FIELDS, {\n      rowsContainerNode: observable.ref,\n      scrollContainerNode: observable.ref\n    });\n    this.Rows = new RowsConstructor(this);\n    /*\r\n    this\r\n        .on( \"#widgetScrollHeight\", this.increaseEndIndexIfNeeded )\r\n        .on( \"#endIndex\", this.increaseEndIndexIfNeeded.cancel );\r\n    */\n  }\n  /*\r\n      Column heights may change during scroll/width-change\r\n  */\n\n  /*   increaseEndIndexIfNeededSync(){\r\n         const currentVisibleDist = this.getDistanceBetweenIndexes( this.startIndex, this.endIndex );\r\n         if( this.widgetHeight > this.virtualTopOffset + currentVisibleDist - this.scrollTop ){\r\n             this.updateEndIndex();\r\n         }\r\n     }\r\n  \n     increaseEndIndexIfNeeded = debounce( this.increaseEndIndexIfNeededSync, END_INDEX_CHECK_INTERVAL );\r\n  */\n\n\n  _proto.destructor = function destructor() {// this.increaseEndIndexIfNeeded.cancel();\n  };\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      node.scrollTop = this.getDistanceBetweenIndexes(0, clamp(index, 0, this.Rows.visibleRowCount));\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ScrollableRowsBase;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"visibleRangeStart\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"visibleRangeStart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"startIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"startIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"endIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"endIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"virtualTopOffset\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"virtualTopOffset\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"merge\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"merge\"), _class.prototype)), _class);\n;\nexport default ScrollableRowsBase;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _temp;\n\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nimport SegmentsTree from \"./SegmentsTree\";\nimport { extendObservable, autorun, action, runInAction, reaction } from \"mobx\";\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 200;\nvar VariableSizeScrollableRows = (_class = (_temp = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(VariableSizeScrollableRows, _ScrollableRowsBase);\n\n  var _proto = VariableSizeScrollableRows.prototype;\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    this.sTree.calculateParentsInRange(startIndex, endIndex);\n    this.syncWidgetScrollHeight();\n  };\n\n  _proto.syncWidgetScrollHeight = function syncWidgetScrollHeight() {\n    this.widgetScrollHeight = this.sTree.height;\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var widgetScrollHeight = this.widgetScrollHeight,\n        estimatedRowHeight = this.estimatedRowHeight,\n        sTree = this.sTree;\n\n    if (widgetScrollHeight && estimatedRowHeight) {\n      return sTree.getStartPositionForSum(dist);\n    }\n\n    return [0, 0];\n  };\n\n  function VariableSizeScrollableRows(RowsConstructor) {\n    var _this;\n\n    _this = _ScrollableRowsBase.call(this, RowsConstructor) || this;\n    _this.rowsDomObserver = new MutationObserver(function () {\n      return runInAction(function () {\n        _this.lastRowsRenderTimeStamp = performance.now();\n      });\n    });\n    _this.disposeCallbacks = [];\n    _this.sTree = new SegmentsTree();\n    extendObservable(_assertThisInitialized(_this), {\n      estimatedRowHeight: 0,\n      widgetScrollHeight: 0,\n      lastRowsRenderTimeStamp: 0,\n\n      /*\r\n          When all row heights are different,\r\n          we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\r\n          basing on what we know: heights between startIndex and endIndex.\r\n          Using simple average by default.\r\n      */\n      shouldResetInvisibleRowHeights: true\n    });\n\n    _this.disposeCallbacks.push(reaction(function () {\n      return _this.estimatedRowHeightFallback;\n    }, function (h) {\n      if (!_this.estimatedRowHeight) {\n        _this.estimatedRowHeight = h;\n      }\n    }, {\n      fireImmediately: true\n    }), autorun(function () {\n      _this.sTree.reallocateIfNeeded(_this.rows.length, _this.estimatedRowHeight);\n\n      _this.syncWidgetScrollHeight();\n    }), autorun(function () {\n      if (_this.widgetWidth) {\n        _this.merge({\n          shouldResetInvisibleRowHeights: true\n        });\n      }\n    }, {\n      delay: 200\n    }), autorun(function () {\n      _this.rowsDomObserver.disconnect();\n\n      if (_this.rowsContainerNode) {\n        _this.rowsDomObserver.observe(_this.rowsContainerNode, {\n          childList: true,\n          subtree: true\n        });\n      }\n    }), autorun(function () {\n      var node = _this.rowsContainerNode;\n\n      if (node && _this.lastRowsRenderTimeStamp) {\n        var _assertThisInitialize = _assertThisInitialized(_this),\n            sTree = _assertThisInitialize.sTree;\n\n        var l = -1,\n            r = -1,\n            rowHeightsSum = 0,\n            rowCounter = 0;\n        /*\r\n            Some benchmarks inspire me to use nextElementSibling\r\n            https://jsperf.com/nextsibling-vs-childnodes-increment/2\r\n        */\n\n        for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n          /*\r\n              * aria-rowindex is counted from 1 according to w3c spec;\r\n              * parseInt with radix is 2x faster, then +, -, etc.\r\n                  https://jsperf.com/number-vs-parseint-vs-plus/116\r\n          */\n          index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n          if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n            throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n          }\n\n          newHeight = child.offsetHeight;\n          rowHeightsSum += newHeight;\n\n          if (sTree.get(index) !== newHeight) {\n            // console.log( \"%d| was: %d; is: %d\", index, sTree[N+index],newHeight)\n            sTree.set(index, newHeight);\n\n            if (l === -1) {\n              l = index;\n            }\n\n            r = index;\n          }\n        }\n\n        if (l !== -1) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.log(\"Updating heights in range: %d - %d\", l, r);\n          }\n\n          if (_this.shouldResetInvisibleRowHeights) {\n            _this.merge({\n              estimatedRowHeight: Math.round(rowHeightsSum / rowCounter),\n              shouldResetInvisibleRowHeights: false\n            });\n          } else {\n            _this.calculateParentsInRange(l, r);\n          }\n        }\n      }\n    }, {\n      delay: ROW_MEASUREMENT_DEBOUNCE_INTERVAL\n    }));\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.disposeCallbacks.forEach(function (cb) {\n      return cb();\n    });\n\n    _ScrollableRowsBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    if (!this.estimatedRowHeight) {\n      return 0;\n    }\n\n    return this.sTree.getDistanceBetweenIndexes(startIndex, endIndex);\n  };\n\n  return VariableSizeScrollableRows;\n}(ScrollableRowsBase), _temp), (_applyDecoratedDescriptor(_class.prototype, \"syncWidgetScrollHeight\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"syncWidgetScrollHeight\"), _class.prototype)), _class);\n;\nexport default VariableSizeScrollableRows;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { computed } from \"mobx\";\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nvar FixedSizeScrollableRows = (_class = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(FixedSizeScrollableRows, _ScrollableRowsBase);\n\n  function FixedSizeScrollableRows() {\n    return _ScrollableRowsBase.apply(this, arguments) || this;\n  }\n\n  var _proto = FixedSizeScrollableRows.prototype;\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return estimatedRowHeight ? [distance / estimatedRowHeight | 0, distance % estimatedRowHeight] : [0, 0];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  _createClass(FixedSizeScrollableRows, [{\n    key: \"estimatedRowHeight\",\n    get: function get() {\n      if (this.widgetWidth) {\n        var node = this.rowsContainerNode;\n\n        if (node) {\n          var firstElementChild = node.firstElementChild;\n\n          if (firstElementChild) {\n            return firstElementChild.offsetHeight;\n          }\n        }\n      }\n\n      return this.estimatedRowHeightFallback;\n    },\n    set: function set(value) {\n      this.estimatedRowHeightFallback = value;\n    }\n  }, {\n    key: \"widgetScrollHeight\",\n    get: function get() {\n      return this.estimatedRowHeight * this.Rows.visibleRowCount;\n    }\n  }]);\n\n  return FixedSizeScrollableRows;\n}(ScrollableRowsBase), (_applyDecoratedDescriptor(_class.prototype, \"estimatedRowHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"estimatedRowHeight\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"widgetScrollHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"widgetScrollHeight\"), _class.prototype)), _class);\n;\nexport default FixedSizeScrollableRows;","import { createContext } from \"react\";\nexport default /*#__PURE__*/createContext();","import { useRef, useEffect, useLayoutEffect } from \"react\";\n/*\r\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\r\n    As it is not dom-related, I decided to avoid forwardRef\r\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef, propsToMerge) {\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useLayoutEffect(function () {\n    Store.merge(Object.assign({}, propsToMerge, {\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    }));\n  });\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return [Store, scrollContainerRef, rowsContainerRef];\n};\n\nexport default useStore;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { computed } from \"mobx\";\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\n\nvar RowsSimple = /*#__PURE__*/function () {\n  function RowsSimple(parent) {\n    this.parent = parent;\n  }\n\n  _createClass(RowsSimple, [{\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.parent.rows.length;\n    }\n  }]);\n\n  return RowsSimple;\n}();\n\nexport default RowsSimple;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport RowsSimple from \"./RowsSimple\";\n\nvar createList = function createList(BaseClass) {\n  return /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_class, _BaseClass);\n\n    function _class() {\n      return _BaseClass.call(this, RowsSimple) || this;\n    }\n\n    return _class;\n  }(BaseClass);\n};\n\nexport default createList;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nvar MIN_TREE_CACHE_OFFSET = 15;\n\nvar getN = function getN(cacheSize, minCacheOffset) {\n  return 2 << Math.log2(cacheSize + minCacheOffset);\n};\n\nvar SegmentsTree = /*#__PURE__*/function () {\n  function SegmentsTree(minCacheOffset) {\n    if (minCacheOffset === void 0) {\n      minCacheOffset = MIN_TREE_CACHE_OFFSET;\n    }\n\n    this.minCacheOffset = minCacheOffset;\n    this.cacheSize = 0;\n    this.N = 0;\n    this.cache = new Uint32Array(1);\n  }\n\n  var _proto = SegmentsTree.prototype;\n\n  _proto.reallocateIfNeeded = function reallocateIfNeeded(cacheSize, defaultValue) {\n    var currentCacheSize = this.cacheSize;\n\n    if (cacheSize !== currentCacheSize) {\n      this.cacheSize = cacheSize;\n      var newN = getN(cacheSize, this.minCacheOffset);\n\n      if (newN !== this.N) {\n        this.N = newN;\n        this.cache = new Uint32Array(newN << 1);\n      } else if (currentCacheSize > cacheSize) {\n        this.cache.fill(0, newN + cacheSize, newN + currentCacheSize);\n      }\n    }\n\n    this.reset(defaultValue);\n  };\n\n  _proto.reset = function reset(defaultValue) {\n    var cache = this.cache,\n        N = this.N,\n        cacheSize = this.cacheSize;\n    cache.fill(defaultValue, N, N + cacheSize);\n    this.calculateParentsInRange(0, cacheSize);\n  };\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var cache = this.cache,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        cache[i] = cache[i << 1] + cache[i << 1 | 1];\n      }\n    }\n  };\n\n  _proto.get = function get(index) {\n    return this.cache[this.N + index];\n  };\n\n  _proto.set = function set(index, value) {\n    this.cache[this.N + index] = value;\n  };\n\n  _proto.getStartPositionForSum = function getStartPositionForSum(dist) {\n    var cache = this.cache,\n        N = this.N;\n    var nodeIndex = 1,\n        v;\n\n    while (nodeIndex < N) {\n      v = cache[nodeIndex <<= 1];\n\n      if (dist >= v) {\n        dist -= v;\n        nodeIndex |= 1;\n      }\n    }\n\n    return [nodeIndex - N, dist];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    var cache = this.cache,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += cache[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += cache[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  _createClass(SegmentsTree, [{\n    key: \"height\",\n    get: function get() {\n      return this.cache[1];\n    }\n  }]);\n\n  return SegmentsTree;\n}();\n\nexport default SegmentsTree;","import createList from \"./createList\";\nimport VariableSizeScrollableRows from \"./VariableSizeScrollableRows\";\nexport default createList(VariableSizeScrollableRows);","import createList from \"./createList\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default createList(FixedSizeScrollableRows);","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;","import { useContext } from \"react\";\nimport Context from \"../Context\";\n\nvar useApi = function useApi() {\n  return useContext(Context);\n};\n\nexport default useApi;","import React, { cloneElement } from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  return /*#__PURE__*/cloneElement(el, {\n    style: {\n      height: useApi().widgetScrollHeight\n    }\n  });\n};\n\nexport default observer(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nvar ScrollContainer = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\"]);\n\n  var API = useApi();\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.merge({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        /*\r\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \r\n            and { box: border-box } option does not work here\r\n        */\n        var _entries$0$target = entries[0].target,\n            offsetWidth = _entries$0$target.offsetWidth,\n            offsetHeight = _entries$0$target.offsetHeight;\n        API.merge({\n          widgetHeight: Math.round(offsetHeight),\n          widgetWidth: Math.round(offsetWidth)\n        });\n      }\n    });\n    R.observe(el);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\r\n      tabIndex=\"0\" is for proper keyboard nav\r\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\r\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, dataIndex, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index, dataIndex);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = getPropsGetter(\"aria-colindex\");","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n\n  var _useApi = useApi(),\n      startIndex = _useApi.startIndex,\n      endIndex = _useApi.endIndex,\n      getRowData = _useApi.getRowData,\n      getRowKey = _useApi.getRowKey;\n\n  return getVisibleRows(startIndex, endIndex, getRowData, getRowKey, getRowExtraProps, RowComponent);\n};\n\nexport default observer(Rows);","import React from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApi = useApi(),\n      virtualTopOffset = _useApi.virtualTopOffset;\n  /*\r\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default observer(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rows: {\n    length: 0\n  },\n  overscanRowsCount: 4,\n  estimatedRowHeight: 16\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      rows = _ref.rows,\n      overscanRowsCount = _ref.overscanRowsCount,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"estimatedRowHeight\", \"rows\", \"overscanRowsCount\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef, {\n    getRowData: getRowData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeightFallback: estimatedRowHeight,\n    rows: rows\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      rowsContainerRef = _useStore[2];\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))));\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? commonPropTypes : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\r\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\r\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\r\n      memo(observer(RowComponentDefault)) will do the trick.\r\n  */\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault)\n});\nexport default /*#__PURE__*/memo(List);"],"sourceRoot":""}