{"version":3,"sources":["webpack:///./lib/useApi/index.js","webpack:///./lib/utils/cx/index.js","webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/Context.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/FixedSizeScrollableRows.js","webpack:///./lib/models/ScrollableRowsBase.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/common/RowCountWarningContainer.js","webpack:///./lib/models/VariableSizeScrollableRows.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/models/RowsSimple.js","webpack:///./lib/models/createList.js","webpack:///./lib/Table/common/Cell.js","webpack:///./lib/utils/isPositionStickySupported/index.js","webpack:///./lib/models/RowsComplex.js","webpack:///./lib/models/createTable.js","webpack:///./lib/models/FixedSizeTable.js","webpack:///./lib/models/VariableSizeTable.js","webpack:///./lib/Table/common/Row.js","webpack:///./lib/Table/common/TotalsCell.js","webpack:///./lib/Table/common/Colgroup.js","webpack:///./lib/Table/NonSticky/TableWrapper/index.js","webpack:///./lib/Table/common/HeaderCells.js","webpack:///./lib/Table/common/Thead.js","webpack:///./lib/Table/common/FooterCells.js","webpack:///./lib/Table/common/Tfoot.js","webpack:///./lib/Table/common/GroupRow.js","webpack:///./lib/Table/common/Rows.js","webpack:///./lib/Table/common/Tbody.js","webpack:///./lib/Table/common/BodyTable.js","webpack:///./lib/Table/NonSticky/useColWidthsResizeObserver/index.js","webpack:///./lib/Table/common/TbodyScroller.js","webpack:///./lib/Table/NonSticky/index.js","webpack:///./lib/Table/Sticky/index.js","webpack:///./lib/Table/index.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/List/index.js"],"names":["useApi","useContext","Context","cx","baseClass","extraClass","getPropsGetter","propName","data","index","dataIndex","getExtraProps","_props","props","extraProps","Object","assign","getRowProps","getCellProps","createContext","el","React","createElement","className","HeightProvider","cloneElement","style","height","widgetScrollHeight","observer","ScrollContainer","forwardRef","_ref","ref","children","onScroll","_objectWithoutPropertiesLoose","API","scrollHandler","useCallback","e","_e$target","target","scrollTop","scrollLeft","merge","useEffect","current","R","ResizeObserver","entries","length","_entries$0$target","offsetWidth","offsetHeight","widgetHeight","Math","round","widgetWidth","observe","unobserve","_extends","tabIndex","useStore","StoreConstructor","dataRef","propsToMerge","scrollContainerRef","useRef","rowsContainerRef","finalDataRef","Store","rowsContainerNode","scrollContainerNode","destructor","_class","FixedSizeScrollableRows","computed","keepAlive","_ScrollableRowsBase","apply","this","arguments","_inheritsLoose","_proto","prototype","getVisibleRangeStart","distance","estimatedRowHeight","getDistanceBetweenIndexes","startIndex","endIndex","_createClass","key","get","node","firstElementChild","estimatedRowHeightFallback","set","value","Rows","visibleRowCount","ScrollableRowsBase","BASIC_OBSERVABLE_FIELDS","rowCount","overscanRowsCount","getRowKey","undefined","getRowData","Error","extendObservable","observable","params","newVisibleStartIndex","visibleRangeStart","max","newEndIndex","min","_this$visibleRangeSta2","remainder","overscanOffset","scrollToRow","clamp","scrollToStart","action","Scroller","Component","virtualTopOffset","commonDefaultProps","fixedSize","RowCountWarningContainer","VariableSizeScrollableRows","_this","call","rowsDomObserver","MutationObserver","runInAction","lastRowsRenderTimeStamp","performance","now","disposeCallbacks","_assertThisInitialized","shouldResetInvisibleRowHeights","push","autorun","_assertThisInitialize","console","log","_assertThisInitialize2","sTree","N","fill","calculateParentsInRange","disconnect","childList","subtree","reaction","newHeight","_assertThisInitialize3","l","r","rowHeightsSum","rowCounter","child","nextElementSibling","parseInt","getAttribute","delay","i","dist","v","nodeIndex","log2","Uint32Array","forEach","cb","res","createList","RowsSimple","parent","BaseClass","_BaseClass","_temp","_len","args","Array","_key","concat","Cell","rowData","rowIndex","getCellDataDefault","getCellData","column","columnIndex","getCellExtraProps","render","getEmptyCellData","dataKey","format","cellData","propTypes","elStyle","document","cssText","map","p","join","_class2","_descriptor","isSupported","position","includes","isPositionStickySupported","TotalsCachePart","rows","_this$rows","columnsByDataKey","col","fn","sum","count","RowsComplex","_initializerDefineProperty","modifyAggregators","arg","aggregators","mapValues","totals","k","keyBy","columns","times","filter","rowIndexesArray","row","every","type","toString","group","all","filtered","groupBy","sort","sign","grouped","a","b","row1","row2","cell1","cell2","reduce","sorted","result","groupArr","groupName","flat","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","createTable","headlessMode","tbodyColumnWidths","add","getOwnPropertyDescriptor","VariableSizeList","Row","CellComponent","getRowExtraProps","rowDataIndex","visibility","FinalCellComponent","Total","cache","showSummaryType","summaryType","formatTotal","title","Fragment","TotalsCell","_ref2","cellTotals","totalsCache","Colgroup","useTbodyWidths","_useApi","j","background","border","width","TableWrapper","marginLeft","tbodyColumnWidthsSum","HeaderCells","colSort","label","Thead","trRef","getCellStyle","clickHandler","colIndex","_API$columns$colIndex","ctrlKey","onClick","memo","FooterCells","TotalsCellComponent","curTotals","curTotalsCache","Tfoot","GroupRow","groupKey","colSpan","RowComponent","orderedRows","rangeFrom","rangeTo","rowKey","idx","getVisibleRows","Tbody","tbodyRef","BodyTable","useColWidthsResizeObserver","observerRef","mutationObserverRef","RO","MO","_entries$i","addedNodes","removedNodes","_j","trNode","TbodyScroller","NonSticky","widthsObserverRef","Sticky","Table","rowCountWarningsTable","headless","nonSticky","_useStore","FixedSizeTableStore","VariableSizeTableStore","ComponentVariant","StickyComponent","NonStickyComponent","Provider","defaultProps","RowComponentDefault","CellComponentDefault","TotalsCellComponentDefault","RowCountWarningContainerDefault","List","_ref$RowComponent","FixedSizeListStore","VariableSizeListStore"],"mappings":"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","file":"This library.2021e01a8ad2d5366f6d.js","sourcesContent":["import { useContext } from \"react\";\nimport Context from \"../Context\";\n\nvar useApi = function useApi() {\n  return useContext(Context);\n};\n\nexport default useApi;","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;","var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, dataIndex, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index, dataIndex);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = /*#__PURE__*/getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = /*#__PURE__*/getPropsGetter(\"aria-colindex\");","import { createContext } from \"react\";\nexport default /*#__PURE__*/createContext();","import React, { cloneElement } from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  return /*#__PURE__*/cloneElement(el, {\n    style: {\n      height: useApi().widgetScrollHeight\n    }\n  });\n};\n\nexport default /*#__PURE__*/observer(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nvar ScrollContainer = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\"]);\n\n  var API = useApi();\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.merge({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        /*\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \n            and { box: border-box } option does not work here\n        */\n        var _entries$0$target = entries[0].target,\n            offsetWidth = _entries$0$target.offsetWidth,\n            offsetHeight = _entries$0$target.offsetHeight;\n        API.merge({\n          widgetHeight: Math.round(offsetHeight),\n          widgetWidth: Math.round(offsetWidth)\n        });\n      }\n    });\n    R.observe(el);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\n      tabIndex=\"0\" is for proper keyboard nav\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","import { useRef, useEffect } from \"react\";\n/*\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\n    As it is not dom-related, I decided to avoid forwardRef\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef, propsToMerge) {\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useEffect(function () {\n    Store.merge(Object.assign({}, propsToMerge, {\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    }));\n  });\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return [Store, scrollContainerRef, rowsContainerRef];\n};\n\nexport default useStore;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec, _class;\n\nimport { computed } from \"mobx\";\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nvar FixedSizeScrollableRows = (_dec = /*#__PURE__*/computed({\n  keepAlive: true\n}), (_class = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(FixedSizeScrollableRows, _ScrollableRowsBase);\n\n  function FixedSizeScrollableRows() {\n    return _ScrollableRowsBase.apply(this, arguments) || this;\n  }\n\n  var _proto = FixedSizeScrollableRows.prototype;\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return estimatedRowHeight ? [distance / estimatedRowHeight | 0, distance % estimatedRowHeight] : [0, 0];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  _createClass(FixedSizeScrollableRows, [{\n    key: \"estimatedRowHeight\",\n    get: function get() {\n      if (this.widgetWidth) {\n        var node = this.rowsContainerNode;\n\n        if (node) {\n          var firstElementChild = node.firstElementChild;\n\n          if (firstElementChild) {\n            return firstElementChild.offsetHeight;\n          }\n        }\n      }\n\n      return this.estimatedRowHeightFallback;\n    },\n    set: function set(value) {\n      this.estimatedRowHeightFallback = value;\n    }\n  }, {\n    key: \"widgetScrollHeight\",\n    get: function get() {\n      return this.estimatedRowHeight * this.Rows.visibleRowCount;\n    }\n  }]);\n\n  return FixedSizeScrollableRows;\n}(ScrollableRowsBase), ( /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"estimatedRowHeight\", [_dec], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"estimatedRowHeight\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"widgetScrollHeight\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"widgetScrollHeight\"), _class.prototype)), _class));\n;\nexport default FixedSizeScrollableRows;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { extendObservable, computed, action, observable } from \"mobx\";\nimport clamp from \"lodash/clamp\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar BASIC_OBSERVABLE_FIELDS = {\n  rowCount: 0,\n  overscanRowsCount: 0,\n  estimatedRowHeightFallback: 0,\n  scrollLeft: 0,\n  scrollTop: 0,\n  widgetHeight: 0,\n  widgetWidth: 0,\n  getRowKey: undefined,\n  getRowData: getRowDataInitial,\n  rowsContainerNode: null,\n  scrollContainerNode: null\n};\nvar END_INDEX_CHECK_INTERVAL = 400;\nvar ScrollableRowsBase = (_class = /*#__PURE__*/function () {\n  var _proto = ScrollableRowsBase.prototype;\n\n  _proto.merge = function merge(params) {\n    Object.assign(this, params);\n  };\n\n  _createClass(ScrollableRowsBase, [{\n    key: \"visibleRangeStart\",\n    get: function get() {\n      return this.getVisibleRangeStart(this.scrollTop);\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$visibleRangeSta = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta[0];\n      return Math.max(0, newVisibleStartIndex - this.overscanRowsCount);\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$getVisibleRange = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n          newEndIndex = _this$getVisibleRange[0];\n      /*\n          getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\n          but for endIndex we need \"<=\", so adding 1 artificially.\n      */\n\n\n      return Math.min(newEndIndex + 1 + this.overscanRowsCount, this.Rows.visibleRowCount);\n    }\n  }, {\n    key: \"virtualTopOffset\",\n    get: function get() {\n      var _this$visibleRangeSta2 = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta2[0],\n          remainder = _this$visibleRangeSta2[1];\n      var overscanOffset = this.getDistanceBetweenIndexes(this.startIndex, newVisibleStartIndex);\n      return this.scrollTop - remainder - overscanOffset;\n    }\n  }]);\n\n  function ScrollableRowsBase() {\n    extendObservable(this, BASIC_OBSERVABLE_FIELDS, {\n      rowsContainerNode: observable.ref,\n      scrollContainerNode: observable.ref\n    });\n    /*\n    this\n        .on( \"#widgetScrollHeight\", this.increaseEndIndexIfNeeded )\n        .on( \"#endIndex\", this.increaseEndIndexIfNeeded.cancel );\n    */\n  }\n  /*\n      Column heights may change during scroll/width-change\n  */\n\n  /*   increaseEndIndexIfNeededSync(){\n         const currentVisibleDist = this.getDistanceBetweenIndexes( this.startIndex, this.endIndex );\n         if( this.widgetHeight > this.virtualTopOffset + currentVisibleDist - this.scrollTop ){\n             this.updateEndIndex();\n         }\n     }\n      increaseEndIndexIfNeeded = debounce( this.increaseEndIndexIfNeededSync, END_INDEX_CHECK_INTERVAL );\n  */\n\n\n  _proto.destructor = function destructor() {// this.increaseEndIndexIfNeeded.cancel();\n  };\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      node.scrollTop = this.getDistanceBetweenIndexes(0, clamp(index, 0, this.Rows.visibleRowCount));\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ScrollableRowsBase;\n}(), ( /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"visibleRangeStart\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"visibleRangeStart\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"startIndex\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"startIndex\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"endIndex\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"endIndex\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"virtualTopOffset\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"virtualTopOffset\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"merge\", [action], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"merge\"), _class.prototype)), _class);\n;\nexport default ScrollableRowsBase;","import React from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApi = useApi(),\n      virtualTopOffset = _useApi.virtualTopOffset;\n  /*\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default /*#__PURE__*/observer(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rowCount: 0,\n  overscanRowsCount: 4,\n  estimatedRowHeight: 16\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport cx from \"../utils/cx\";\n\nvar RowCountWarningContainer = function RowCountWarningContainer(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-row-count-warning-container\", className)\n  }, props));\n};\n\nexport default RowCountWarningContainer;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec, _dec2, _class, _temp;\n\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nimport { observable, extendObservable, computed, autorun, action, runInAction, reaction } from \"mobx\";\n/*\n    We should always have some extra space for new rows. We do not want to reallocate cache every time.\n*/\n\nvar MIN_TREE_CACHE_OFFSET = 15;\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 200;\nvar VariableSizeScrollableRows = (_dec = /*#__PURE__*/computed({\n  keepAlive: true\n}), _dec2 = /*#__PURE__*/computed({\n  keepAlive: true\n}), (_class = (_temp = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(VariableSizeScrollableRows, _ScrollableRowsBase);\n\n  var _proto = VariableSizeScrollableRows.prototype;\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        sTree[i] = sTree[i << 1] + sTree[i << 1 | 1];\n      }\n    }\n    /* In segments tree 1 node is always sum of all elements */\n\n\n    this.merge({\n      widgetScrollHeight: sTree[1]\n    });\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var widgetScrollHeight = this.widgetScrollHeight,\n        estimatedRowHeight = this.estimatedRowHeight,\n        sTree = this.sTree,\n        N = this.N;\n\n    if (widgetScrollHeight && estimatedRowHeight) {\n      var nodeIndex = 1,\n          v;\n\n      while (nodeIndex < N) {\n        v = sTree[nodeIndex <<= 1];\n\n        if (dist >= v) {\n          dist -= v;\n          nodeIndex |= 1;\n        }\n      }\n\n      return [nodeIndex - N, dist];\n    }\n\n    return [0, 0];\n  };\n\n  _createClass(VariableSizeScrollableRows, [{\n    key: \"N\",\n    get: function get() {\n      /* Nearest pow of 2 to visibleRowCount. 56 >= 64, 67 => 128, etc. */\n      var visibleRowCount = this.Rows.visibleRowCount;\n      return visibleRowCount > 0 ? 2 << Math.log2(visibleRowCount + MIN_TREE_CACHE_OFFSET) : 1;\n    }\n  }, {\n    key: \"sTree\",\n    get: function get() {\n      // Uint16 cannot be used here, because array stores intermediate sums, which can be huge.\n      return new Uint32Array(this.N << 1);\n    }\n  }]);\n\n  function VariableSizeScrollableRows() {\n    var _this;\n\n    _this = _ScrollableRowsBase.call(this) || this;\n    _this.rowsDomObserver = new MutationObserver(function () {\n      return runInAction(function () {\n        _this.lastRowsRenderTimeStamp = performance.now();\n      });\n    });\n    _this.disposeCallbacks = [];\n    extendObservable(_assertThisInitialized(_this), {\n      estimatedRowHeight: 0,\n      widgetScrollHeight: 0,\n      lastRowsRenderTimeStamp: 0,\n\n      /*\n          When all row heights are different,\n          we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\n          basing on what we know: heights between startIndex and endIndex.\n          Using simple average by default.\n      */\n      shouldResetInvisibleRowHeights: true\n    });\n\n    _this.disposeCallbacks.push(autorun(function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          rowCount = _assertThisInitialize.rowCount,\n          estimatedRowHeight = _assertThisInitialize.estimatedRowHeight; //superdirty\n\n\n      if (!estimatedRowHeight || !rowCount) {\n        return;\n      }\n\n      console.log(\"DD\", _assertThisInitialized(_this));\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          sTree = _assertThisInitialize2.sTree,\n          N = _assertThisInitialize2.N,\n          visibleRowCount = _assertThisInitialize2.Rows.visibleRowCount;\n\n      sTree.fill(estimatedRowHeight, N, N + visibleRowCount);\n      /*\n          Trees are not always ideally allocated, gaps are possible.\n          Classical way for calculating parents is much simpler,\n          but can do much more work(summing zeros) in such conditions. Commented classic algo:\n                       for( let i = N + visibleRowCount >> 1, j; i > 0; --i ){\n              j = i << 1;\n              sTree[ i ] = sTree[ j ] + sTree[ j | 1 ];\n          }\n      */\n\n      _this.calculateParentsInRange(0, visibleRowCount);\n    }), autorun(function () {\n      if (_this.widgetWidth) {\n        _this.merge({\n          shouldResetInvisibleRowHeights: true\n        });\n      }\n    }), autorun(function () {\n      _this.rowsDomObserver.disconnect();\n\n      if (_this.rowsContainerNode) {\n        _this.rowsDomObserver.observe(_this.rowsContainerNode, {\n          childList: true,\n          subtree: true\n        });\n      }\n    }), reaction(function () {\n      return _this.lastRowsRenderTimeStamp * _this.widgetWidth;\n    }, function () {\n      var node = _this.rowsContainerNode;\n\n      if (node) {\n        var _assertThisInitialize3 = _assertThisInitialized(_this),\n            sTree = _assertThisInitialize3.sTree,\n            N = _assertThisInitialize3.N;\n\n        var l = -1,\n            r = -1,\n            rowHeightsSum = 0,\n            rowCounter = 0;\n        /*\n            Some benchmarks inspire me to use nextElementSibling\n            https://jsperf.com/nextsibling-vs-childnodes-increment/2\n        */\n\n        for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n          /*\n              * aria-rowindex is counted from 1 according to w3c spec;\n              * parseInt with radix is 2x faster, then +, -, etc.\n                https://jsperf.com/number-vs-parseint-vs-plus/116\n          */\n          index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n          if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n            throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n          }\n\n          newHeight = child.offsetHeight;\n          rowHeightsSum += newHeight;\n\n          if (sTree[N + index] !== newHeight) {\n            // console.log( \"%d| was: %d; is: %d\", index, sTree[N+index],newHeight)\n            sTree[N + index] = newHeight;\n\n            if (l === -1) {\n              l = index;\n            }\n\n            r = index;\n          }\n        }\n\n        if (l !== -1) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.log(\"Updating heights in range: %d - %d\", l, r);\n          }\n\n          if (_this.shouldResetInvisibleRowHeights) {\n            _this.merge({\n              estimatedRowHeight: Math.round(rowHeightsSum / rowCounter),\n              shouldResetInvisibleRowHeights: false\n            });\n          } else {\n            _this.calculateParentsInRange(l, r);\n          }\n        }\n      }\n    }, {\n      delay: ROW_MEASUREMENT_DEBOUNCE_INTERVAL\n    }));\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.disposeCallbacks.forEach(function (cb) {\n      return cb();\n    });\n\n    _ScrollableRowsBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    if (!this.estimatedRowHeight) {\n      return 0;\n    }\n\n    var sTree = this.sTree,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += sTree[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += sTree[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  return VariableSizeScrollableRows;\n}(ScrollableRowsBase), _temp), ( /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"N\", [_dec], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"N\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"sTree\", [_dec2], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"sTree\"), _class.prototype)), _class));\n;\nexport default VariableSizeScrollableRows;","import createList from \"./createList\";\nimport VariableSizeScrollableRows from \"./VariableSizeScrollableRows\";\nexport default /*#__PURE__*/createList(VariableSizeScrollableRows);","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { computed } from \"mobx\";\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\n\nvar RowsSimple = /*#__PURE__*/function () {\n  function RowsSimple(parent) {\n    this.parent = parent;\n  }\n\n  _createClass(RowsSimple, [{\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.parent.rowCount;\n    }\n  }]);\n\n  return RowsSimple;\n}();\n\nexport default RowsSimple;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport RowsSimple from \"./RowsSimple\";\n\nvar createList = function createList(BaseClass) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_temp, _BaseClass);\n\n    function _temp() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _BaseClass.call.apply(_BaseClass, [this].concat(args)) || this;\n      _this.Rows = new RowsSimple(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return _temp;\n  }(BaseClass), _temp;\n};\n\nexport default createList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCellProps } from \"../../utils/extraPropsGetters\";\n/*\n    If all cells in a row would be completely empty - row can \"collapse\" short.\n    To prevent it we can fill it with &nbsp;\n*/\n\nvar DEFAULT_EMPTY_CELL_CONTENT = \"\\xA0\";\n\nvar Cell = function Cell(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      getCellDataDefault = _ref.getCellData,\n      column = _ref.column,\n      columnIndex = _ref.columnIndex,\n      getCellExtraProps = _ref.getCellExtraProps;\n  var render = column.render,\n      getEmptyCellData = column.getEmptyCellData,\n      dataKey = column.dataKey,\n      format = column.format,\n      getCellData = column.getCellData;\n  var cellData = rowData && (getCellData || getCellDataDefault)(rowData, rowIndex, dataKey);\n\n  if (cellData === undefined || cellData === \"\") {\n    cellData = getEmptyCellData ? getEmptyCellData(rowIndex, column) : DEFAULT_EMPTY_CELL_CONTENT;\n  } else {\n    if (format) {\n      cellData = format(cellData, rowData);\n    }\n\n    if (render) {\n      cellData = render(cellData, rowData, column);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", getCellProps(rowData, columnIndex, columnIndex, getCellExtraProps), cellData);\n};\n\nCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getCellData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  columnIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  rowData: PropTypes.object,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Cell;","var elStyle = /*#__PURE__*/document.createElement(\"a\").style;\nelStyle.cssText = /*#__PURE__*/[\"\", \"-webkit-\", \"-ms-\"].map(function (p) {\n  return \"position:\" + p + \"sticky\";\n}).join(\";\");\nvar isSupported = /*#__PURE__*/elStyle.position.includes(\"sticky\");\n\nvar isPositionStickySupported = function isPositionStickySupported() {\n  return isSupported;\n};\n\nexport default isPositionStickySupported;","import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _class2, _descriptor, _temp;\n\nimport { computed, action, observable } from \"mobx\";\nimport groupBy from \"lodash/groupBy\";\nimport mapValues from \"lodash/mapValues\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\nimport reduce from \"lodash/reduce\";\n/*\n    {\n        filter: [\n            {\n                dataKey: \"example\",\n                value: \"ssss\",\n                type: \"includes\"\n            }\n        ],\n        group: {\n            dataKey: \"example2\",\n            value: \"\",\n            type: \"default\"\n        },\n        sort: {\n            dataKey: \"example3\",\n            value: \"ascending\",\n            type: \"numeric\"\n        }\n    }\n*/\n\nvar TotalsCachePart = (_class = /*#__PURE__*/function () {\n  function TotalsCachePart(rows, dataKey) {\n    this.rows = rows;\n    this.dataKey = dataKey;\n  }\n\n  _createClass(TotalsCachePart, [{\n    key: \"count\",\n    get: function get() {\n      return this.rows.parent.rowCount;\n    }\n  }, {\n    key: \"sum\",\n    get: function get() {\n      var res = 0;\n      var _this$rows = this.rows,\n          columnsByDataKey = _this$rows.columnsByDataKey,\n          parent = _this$rows.parent,\n          dataKey = this.dataKey;\n      var col = columnsByDataKey[dataKey];\n      var getCellData = parent.getCellData,\n          getRowData = parent.getRowData,\n          rowCount = parent.rowCount;\n      var fn = col.getCellData || getCellData;\n\n      for (var i = 0, row, cellData; i < rowCount; i++) {\n        row = getRowData(i);\n        cellData = fn(row, i, dataKey);\n        res += cellData;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"average\",\n    get: function get() {\n      return this.sum / this.count;\n    }\n  }]);\n\n  return TotalsCachePart;\n}(), ( /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"count\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"count\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"sum\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"sum\"), _class.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class.prototype, \"average\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class.prototype, \"average\"), _class.prototype)), _class);\n;\nvar RowsComplex = (_class2 = (_temp = /*#__PURE__*/function () {\n  function RowsComplex(parent) {\n    _initializerDefineProperty(this, \"aggregators\", _descriptor, this);\n\n    this.parent = parent;\n  }\n\n  var _proto = RowsComplex.prototype;\n\n  _proto.modifyAggregators = function modifyAggregators(arg) {\n    Object.assign(this.aggregators, arg);\n  };\n\n  _createClass(RowsComplex, [{\n    key: \"totalsCache\",\n    get: function get() {\n      var _this = this;\n\n      return mapValues(this.parent.totals, function (v, k) {\n        return new TotalsCachePart(_this, k);\n      });\n    }\n  }, {\n    key: \"columnsByDataKey\",\n    get: function get() {\n      return keyBy(this.parent.columns, \"dataKey\");\n    }\n  }, {\n    key: \"rowIndexesArray\",\n    get: function get() {\n      return times(this.parent.rowCount);\n    }\n  }, {\n    key: \"filtered\",\n    get: function get() {\n      var columnsByDataKey = this.columnsByDataKey,\n          parent = this.parent;\n      var getCellData = parent.getCellData,\n          getRowData = parent.getRowData;\n      var filter = this.aggregators.filter;\n\n      if (!getCellData || !filter || !filter.length) {\n        return this.rowIndexesArray;\n      }\n\n      return this.rowIndexesArray.filter(function (i) {\n        var row = getRowData(i);\n        return filter.every(function (_ref) {\n          var dataKey = _ref.dataKey,\n              value = _ref.value,\n              type = _ref.type;\n          var col = columnsByDataKey[dataKey];\n          var cellData = (col.getCellData || getCellData)(row, i, dataKey);\n          return cellData.toString().includes(value);\n        });\n      });\n    }\n  }, {\n    key: \"grouped\",\n    get: function get() {\n      var group = this.aggregators.group;\n\n      if (!group || !group.dataKey) {\n        return {\n          all: this.filtered\n        };\n      }\n\n      var dataKey = group.dataKey;\n      var columnsByDataKey = this.columnsByDataKey,\n          parent = this.parent;\n      var getCellData = parent.getCellData,\n          getRowData = parent.getRowData;\n      var col = columnsByDataKey[dataKey];\n      return groupBy(this.filtered, function (i) {\n        var row = getRowData(i);\n        var cellData = (col.getCellData || getCellData)(row, i, dataKey);\n        return cellData;\n      });\n    }\n  }, {\n    key: \"sorted\",\n    get: function get() {\n      var columnsByDataKey = this.columnsByDataKey,\n          sort = this.aggregators.sort,\n          parent = this.parent;\n\n      if (sort && sort.dataKey) {\n        var dataKey = sort.dataKey,\n            value = sort.value;\n        var getCellData = parent.getCellData,\n            getRowData = parent.getRowData;\n        var col = columnsByDataKey[dataKey];\n        var fn = col.getCellData || getCellData;\n        var sign = value === \"ascending\" ? 1 : -1;\n        return mapValues(this.grouped, function (v) {\n          return v.sort(function (a, b) {\n            var row1 = getRowData(a);\n            var row2 = getRowData(b);\n            var cell1 = fn(row1, a, dataKey);\n            var cell2 = fn(row2, b, dataKey);\n\n            if (cell1 > cell2) {\n              return sign;\n            }\n\n            if (cell1 < cell2) {\n              return -sign;\n            }\n\n            return 0;\n          });\n        });\n      }\n\n      return this.grouped;\n    }\n  }, {\n    key: \"flat\",\n    get: function get() {\n      return reduce(this.sorted, function (result, groupArr, groupName) {\n        result.push.apply(result, [groupName].concat(groupArr));\n        return result;\n      }, []);\n    }\n  }, {\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.flat.length;\n    }\n  }]);\n\n  return RowsComplex;\n}(), _temp), (_descriptor = /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"aggregators\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"modifyAggregators\", [action], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"modifyAggregators\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"totalsCache\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"totalsCache\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"columnsByDataKey\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"columnsByDataKey\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"rowIndexesArray\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"rowIndexesArray\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"filtered\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"filtered\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"grouped\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"grouped\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"sorted\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"sorted\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"flat\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"flat\"), _class2.prototype), /*#__PURE__*/_applyDecoratedDescriptor(_class2.prototype, \"visibleRowCount\", [computed], /*#__PURE__*/Object.getOwnPropertyDescriptor(_class2.prototype, \"visibleRowCount\"), _class2.prototype)), _class2);\nexport default RowsComplex;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport { extendObservable, computed } from \"mobx\";\nimport add from \"lodash/add\";\nimport RowsComplex from \"./RowsComplex\";\n/*\n    can't extend from both FixedSizeList and VariableSizeList, so exporting compositor\n*/\n\nvar createTable = function createTable(BaseClass) {\n  var _class, _temp;\n\n  return _class = (_temp = /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_class, _BaseClass);\n\n    _createClass(_class, [{\n      key: \"tbodyColumnWidthsSum\",\n      get: function get() {\n        return this.tbodyColumnWidths.reduce(add);\n      }\n    }]);\n\n    function _class() {\n      var _this;\n\n      _this = _BaseClass.call(this) || this;\n      _this.Rows = new RowsComplex(_assertThisInitialized(_this));\n      extendObservable(_assertThisInitialized(_this), {\n        columns: [],\n        totals: {},\n        headlessMode: false,\n        getCellData: null,\n        tbodyColumnWidths: []\n      });\n      return _this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.destructor = function destructor() {\n      _BaseClass.prototype.destructor.call(this);\n    };\n\n    return _class;\n  }(BaseClass), _temp), (_applyDecoratedDescriptor(_class.prototype, \"tbodyColumnWidthsSum\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"tbodyColumnWidthsSum\"), _class.prototype)), _class;\n};\n\nexport default createTable;","import createTable from \"./createTable\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default /*#__PURE__*/createTable(FixedSizeScrollableRows);","import createTable from \"./createTable\";\nimport VariableSizeList from \"./VariableSizeList\";\nexport default /*#__PURE__*/createTable(VariableSizeList);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var columns = _ref.columns,\n      CellComponent = _ref.CellComponent,\n      getRowData = _ref.getRowData,\n      getCellData = _ref.getCellData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowDataIndex = _ref.rowDataIndex,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowDataIndex);\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(rowData, rowIndex, rowDataIndex, getRowExtraProps), columns.map(function (column, columnIndex) {\n    if (column.visibility === \"hidden\") {\n      return null;\n    }\n\n    var FinalCellComponent = column.CellComponent || CellComponent;\n    return /*#__PURE__*/React.createElement(FinalCellComponent, {\n      key: column.dataKey,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      column: column,\n      columnIndex: columnIndex,\n      getCellData: getCellData,\n      getCellExtraProps: column.getCellExtraProps || getCellExtraProps\n    });\n  }));\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getCellData: PropTypes.func.isRequired,\n  columns: PropTypes.array.isRequired,\n  CellComponent: PropTypes.elementType.isRequired,\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowDataIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nvar Total = /*#__PURE__*/observer(function (_ref) {\n  var cache = _ref.cache,\n      showSummaryType = _ref.showSummaryType,\n      summaryType = _ref.summaryType,\n      formatTotal = _ref.formatTotal;\n  var res = cache[summaryType];\n  return res !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    key: summaryType,\n    title: summaryType,\n    className: \"afvscr-summary\"\n  }, showSummaryType ? /*#__PURE__*/React.createElement(Fragment, null, summaryType, \"\\xA0\") : null, formatTotal ? formatTotal(res) : res) : null;\n});\n\nvar TotalsCell = function TotalsCell(_ref2) {\n  var cellTotals = _ref2.cellTotals,\n      totalsCache = _ref2.totalsCache,\n      formatTotal = _ref2.formatTotal;\n\n  if (!cellTotals || !totalsCache) {\n    return null;\n  }\n\n  if (cellTotals.length === 1) {\n    return /*#__PURE__*/React.createElement(Total, {\n      summaryType: cellTotals[0],\n      cache: totalsCache,\n      formatTotal: formatTotal\n    });\n  }\n\n  return cellTotals.map(function (summaryType) {\n    return /*#__PURE__*/React.createElement(Total, {\n      key: summaryType,\n      showSummaryType: true,\n      summaryType: summaryType,\n      cache: totalsCache,\n      formatTotal: formatTotal\n    });\n  });\n};\n\nexport default /*#__PURE__*/observer(TotalsCell);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar Colgroup = function Colgroup(_ref) {\n  var useTbodyWidths = _ref.useTbodyWidths;\n\n  var _useApi = useApi(),\n      columns = _useApi.columns,\n      tbodyColumnWidths = _useApi.tbodyColumnWidths;\n\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        background = _ref2.background,\n        visibility = _ref2.visibility,\n        border = _ref2.border,\n        width = _ref2.width;\n    return visibility !== \"hidden\" ? /*#__PURE__*/React.createElement(\"col\", {\n      key: dataKey,\n      style: {\n        width: useTbodyWidths ? tbodyColumnWidths[j] : width,\n        background: background,\n        border: border\n      }\n    }) : null;\n  }));\n};\n\nexport default /*#__PURE__*/observer(Colgroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../../useApi\";\nimport Colgroup from \"../../common/Colgroup\";\nimport cx from \"../../../utils/cx\";\n\nvar TableWrapper = function TableWrapper(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\"]);\n\n  var _useApi = useApi(),\n      scrollLeft = _useApi.scrollLeft,\n      columns = _useApi.columns,\n      tbodyColumnWidthsSum = _useApi.tbodyColumnWidthsSum;\n\n  var style = {\n    /* If we do this via transform translate, col background would have bugs during horizontal scroll. Strange webkit behavior */\n    marginLeft: -scrollLeft,\n    width: tbodyColumnWidthsSum\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: cx(\"afvscr-nonst-subtable\", className)\n  }, props, {\n    style: style,\n    \"aria-colcount\": columns.length\n  }), /*#__PURE__*/React.createElement(Colgroup, {\n    useTbodyWidths: true\n  }), children);\n};\n\nexport default /*#__PURE__*/observer(TableWrapper);","import React from \"react\";\nimport useApi from \"../../useApi\";\nimport { observer } from \"mobx-react-lite\";\n\nvar HeaderCells = function HeaderCells() {\n  var _useApi = useApi(),\n      columns = _useApi.columns,\n      Rows = _useApi.Rows;\n\n  var sort = Rows.aggregators.sort;\n  return columns.map(function (_ref, j) {\n    var dataKey = _ref.dataKey,\n        title = _ref.title,\n        colSort = _ref.sort,\n        label = _ref.label,\n        visibility = _ref.visibility;\n    return visibility === \"hidden\" ? null : /*#__PURE__*/React.createElement(\"th\", {\n      key: dataKey,\n      title: title,\n      \"data-sortable\": colSort ? \"\" : undefined,\n      \"aria-colindex\": j + 1,\n      \"aria-sort\": sort && sort.dataKey === dataKey ? sort.value : \"none\"\n    }, label);\n  });\n};\n\nexport default /*#__PURE__*/observer(HeaderCells);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback, memo } from \"react\";\nimport HeaderCells from \"./HeaderCells\";\nimport useApi from \"../../useApi\";\n\nvar Thead = function Thead(_ref) {\n  var trRef = _ref.trRef,\n      getCellStyle = _ref.getCellStyle,\n      props = _objectWithoutPropertiesLoose(_ref, [\"trRef\", \"getCellStyle\"]);\n\n  var API = useApi();\n  var clickHandler = useCallback(function (e) {\n    var colIndex = parseInt(e.target.getAttribute(\"aria-colindex\"), 10) - 1;\n\n    if (process.env.NODE_ENV !== \"production\" && Number.isNaN(colIndex)) {\n      throw new Error(\"colIndex attr missing\");\n    }\n\n    var _API$columns$colIndex = API.columns[colIndex],\n        sort = _API$columns$colIndex.sort,\n        dataKey = _API$columns$colIndex.dataKey;\n\n    if (e.ctrlKey) {\n      API.Rows.modifyAggregators({\n        group: API.Rows.aggregators.group && API.Rows.aggregators.group.dataKey === dataKey ? null : {\n          dataKey: dataKey,\n          value: \"\"\n        }\n      });\n    } else if (sort) {\n      var value = e.target.getAttribute(\"aria-sort\") === \"ascending\" ? \"descending\" : \"ascending\";\n      API.Rows.modifyAggregators({\n        sort: {\n          dataKey: dataKey,\n          value: value\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"thead\", _extends({}, props, {\n    onClick: clickHandler\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(HeaderCells, null)));\n};\n\nexport default /*#__PURE__*/memo(Thead);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\n\nvar FooterCells = function FooterCells(_ref) {\n  var TotalsCellComponent = _ref.TotalsCellComponent;\n\n  var _useApi = useApi(),\n      columns = _useApi.columns,\n      totals = _useApi.totals,\n      totalsCache = _useApi.Rows.totalsCache;\n\n  return columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        formatTotal = _ref2.formatTotal,\n        visibility = _ref2.visibility;\n\n    if (visibility === \"hidden\") {\n      return null;\n    }\n\n    var curTotals = totals[dataKey];\n    var curTotalsCache = totalsCache[dataKey];\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: dataKey,\n      \"aria-colindex\": j + 1\n    }, /*#__PURE__*/React.createElement(TotalsCellComponent, {\n      cellTotals: curTotals,\n      totalsCache: curTotalsCache,\n      formatTotal: formatTotal\n    }));\n  });\n};\n\nFooterCells.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  TotalsCellComponent: PropTypes.elementType.isRequired\n} : {};\nexport default /*#__PURE__*/observer(FooterCells);","import React, { memo } from \"react\";\nimport FooterCells from \"./FooterCells\";\n\nvar Tfoot = function Tfoot(_ref) {\n  var className = _ref.className,\n      trRef = _ref.trRef,\n      TotalsCellComponent = _ref.TotalsCellComponent;\n  return /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(FooterCells, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default /*#__PURE__*/memo(Tfoot);","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar GroupRow = function GroupRow(_ref) {\n  var columns = _ref.columns,\n      groupKey = _ref.groupKey,\n      rowIndex = _ref.rowIndex;\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(null, rowIndex), /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: columns.length,\n    className: \"afvscr-group-cell\"\n  }, groupKey));\n};\n\nGroupRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  columns: PropTypes.array.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  groupKey: PropTypes.string.isRequired\n} : {};\nexport default /*#__PURE__*/memo(GroupRow);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\nimport GroupRow from \"./GroupRow\";\n\nvar getVisibleRows = function getVisibleRows(orderedRows, rangeFrom, rangeTo, columns, getRowData, getCellData, getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent) {\n  var result = [];\n\n  for (var rowKey, idx; rangeFrom < rangeTo; rangeFrom++) {\n    idx = orderedRows[rangeFrom];\n\n    if (typeof idx === \"number\") {\n      rowKey = getRowKey ? getRowKey(idx) : idx;\n      result.push( /*#__PURE__*/React.createElement(RowComponent, {\n        getRowExtraProps: getRowExtraProps,\n        getCellExtraProps: getCellExtraProps,\n        rowIndex: rangeFrom,\n        rowDataIndex: idx,\n        key: rowKey,\n        columns: columns,\n        getRowData: getRowData,\n        getCellData: getCellData,\n        CellComponent: CellComponent\n      }));\n    } else {\n      result.push( /*#__PURE__*/React.createElement(GroupRow, {\n        key: \"group_\" + idx,\n        groupKey: idx,\n        columns: columns,\n        rowIndex: rangeFrom\n      }));\n    }\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  var API = useApi();\n  return getVisibleRows(API.Rows.flat, API.startIndex, API.endIndex, API.columns, API.getRowData, API.getCellData, API.getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent);\n};\n\nexport default /*#__PURE__*/observer(Rows);","import React, { memo } from \"react\";\nimport Rows from \"./Rows\";\n\nvar Tbody = function Tbody(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      tbodyRef = _ref.tbodyRef,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tbodyRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }));\n};\n\nexport default /*#__PURE__*/memo(Tbody);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar BodyTable = function BodyTable(_ref) {\n  var children = _ref.children;\n  var API = useApi();\n  return /*#__PURE__*/React.createElement(\"table\", {\n    children: children,\n    className: \"afvscr-main-table\",\n    \"aria-rowcount\": API.rowCount,\n    \"aria-colcount\": API.columns.length\n  });\n};\n\nexport default /*#__PURE__*/observer(BodyTable);","import { useRef, useEffect, useCallback } from \"react\";\n\nvar useColWidthsResizeObserver = function useColWidthsResizeObserver(API) {\n  var observerRef = useRef();\n  var mutationObserverRef = useRef();\n  var RO = observerRef.current;\n  var MO = mutationObserverRef.current;\n\n  if (!RO) {\n    RO = observerRef.current = new ResizeObserver(function (entries) {\n      for (var j = 0, colIndex; j < entries.length; j++) {\n        var target = entries[j].target;\n        colIndex = parseInt(target.getAttribute(\"aria-colindex\"));\n        /*\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \n            and { box: border-box } option does not work here\n        */\n\n        API.tbodyColumnWidths[colIndex - 1] = Math.round(target.offsetWidth);\n      }\n    });\n    MO = mutationObserverRef.current = new MutationObserver(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        var _entries$i = entries[i],\n            addedNodes = _entries$i.addedNodes,\n            removedNodes = _entries$i.removedNodes;\n\n        for (var j = 0; j < addedNodes.length; j++) {\n          RO.observe(addedNodes[j]);\n        }\n\n        for (var _j = 0; _j < removedNodes.length; _j++) {\n          RO.unobserve(removedNodes[_j]);\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    return function () {\n      RO.disconnect();\n      MO.disconnect();\n    };\n  }, []);\n  /* callback ref */\n\n  return useCallback(function (trNode) {\n    MO.disconnect();\n    RO.disconnect();\n\n    if (trNode) {\n      MO.observe(trNode, {\n        childList: true\n      });\n    }\n  }, []);\n};\n\nexport default useColWidthsResizeObserver;","import React from \"react\";\nimport Scroller from \"../../common/Scroller\";\n/*\n    According to specs, tr must always be inside tbody, thead or tfoot                \n*/\n\nvar TbodyScroller = function TbodyScroller() {\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"tr\"\n  }));\n};\n\nexport default TbodyScroller;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nimport TableWrapper from \"./TableWrapper\";\nimport Thead from \"../common/Thead\";\nimport Tfoot from \"../common/Tfoot\";\nimport Tbody from \"../common/Tbody\";\nimport BodyTable from \"../common/BodyTable\";\nimport useColWidthsResizeObserver from \"./useColWidthsResizeObserver\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport cx from \"../../utils/cx\";\n\nvar NonSticky = function NonSticky(_ref) {\n  var className = _ref.className,\n      tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"onScroll\"]);\n\n  var API = useApi();\n  var headlessMode = API.headlessMode,\n      totals = API.totals;\n  /*\n      Hidden tfoot & thead are needed to 'hold' widths of tbody columns no to be narrower than real thead/tfoot\n      and notify model about columns width changes.\n      There are 3 tables rendered in this mode, so their column widths need to be synced somehow.\n  */\n\n  var widthsObserverRef = useColWidthsResizeObserver(API);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (headlessMode && !totals) {\n      console.warn(\"NonSticky table is rendered without headers and footers. This is not ok.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-nonst\", className)\n  }, props), headlessMode ? null : /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Thead, null)), /*#__PURE__*/React.createElement(ScrollContainer, {\n    ref: scrollContainerRef,\n    onScroll: onScroll\n  }, /*#__PURE__*/React.createElement(BodyTable, null, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, {\n    className: \"afvscr-hdnwrp\",\n    trRef: widthsObserverRef\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent,\n    className: \"afvscr-hdnwrp\",\n    trRef: headlessMode ? widthsObserverRef : undefined\n  }), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }))), totals && /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default /*#__PURE__*/observer(NonSticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport Thead from \"../common/Thead\";\nimport Tbody from \"../common/Tbody\";\nimport Tfoot from \"../common/Tfoot\";\nimport BodyTable from \"../common/BodyTable\";\nimport useApi from \"../../useApi\";\nimport cx from \"../../utils/cx\";\n/*\n    Todo:\n        measure thead & tfoot heights in order to properly calculate available space for rows\n*/\n\nvar Sticky = function Sticky(_ref) {\n  var tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"className\"]);\n\n  var _useApi = useApi(),\n      headlessMode = _useApi.headlessMode,\n      totals = _useApi.totals;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    /*\n        https://bugs.chromium.org/p/chromium/issues/detail?id=702927\n    */\n    var areTotalsPresent = totals && totals.length !== 0;\n    useEffect(function () {\n      if (!headlessMode || areTotalsPresent) {\n        /* TODO: tests fail without this if */\n        if (scrollContainerRef.current) {\n          var table = scrollContainerRef.current.querySelector(\"table\");\n          var tableStyle = getComputedStyle(table);\n\n          if (tableStyle.borderCollapse === \"collapse\") {\n            console.warn(\"You use sticky table version. Due to special border behavior when scrolling, use border-collpase: separate.%o\", \"https://bugs.chromium.org/p/chromium/issues/detail?id=702927\");\n          }\n        }\n      }\n    }, [headlessMode, areTotalsPresent]);\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    ref: scrollContainerRef,\n    className: cx(\"afvscr-st\", className)\n  }, props), /*#__PURE__*/React.createElement(BodyTable, null, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, null), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default /*#__PURE__*/observer(Sticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isPositionStickySupported from \"../utils/isPositionStickySupported\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport FixedSizeTableStore from \"../models/FixedSizeTable\";\nimport VariableSizeTableStore from \"../models/VariableSizeTable\";\nimport RowComponentDefault from \"./common/Row\";\nimport CellComponentDefault from \"./common/Cell\";\nimport TotalsCellComponentDefault from \"./common/TotalsCell\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport NonStickyComponent from \"./NonSticky\";\nimport StickyComponent from \"./Sticky\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar Table = function Table(_ref) {\n  var fixedSize = _ref.fixedSize,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      columns = _ref.columns,\n      totals = _ref.totals,\n      getRowData = _ref.getRowData,\n      getCellData = _ref.getCellData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      headless = _ref.headless,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      dataRef = _ref.dataRef,\n      nonSticky = _ref.nonSticky,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"estimatedRowHeight\", \"columns\", \"totals\", \"getRowData\", \"getCellData\", \"getRowKey\", \"getRowExtraProps\", \"getCellExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"headless\", \"RowCountWarningContainer\", \"dataRef\", \"nonSticky\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeTableStore : VariableSizeTableStore, dataRef, {\n    headlessMode: headless,\n    getRowData: getRowData,\n    getCellData: getCellData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeight: estimatedRowHeight,\n    totals: totals,\n    columns: columns,\n    rowCount: rowCount\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      tbodyRef = _useStore[2];\n  /*\n      Only cells inside thead/tfoot can be sticky.\n      If thead/tfoot are hidden - we can easily render lighter StickyComponent to avoid extra wrappers\n  */\n\n\n  var ComponentVariant = headless && !totals || !nonSticky && isPositionStickySupported() ? StickyComponent : NonStickyComponent;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ComponentVariant, _extends({\n    className: cx(\"afvscr-table-wrapper\", className),\n    scrollContainerRef: scrollContainerRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    tbodyRef: tbodyRef\n  }, props)) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? /*#__PURE__*/Object.assign({}, commonPropTypes, {\n  columns: /*#__PURE__*/PropTypes.arrayOf( /*#__PURE__*/PropTypes.shape({\n    // unique key for column\n    dataKey: PropTypes.string.isRequired,\n    // for details see CellComponent implementation\n    getCellData: PropTypes.func,\n    getEmptyCellData: PropTypes.func,\n    format: PropTypes.func,\n    render: PropTypes.func,\n    formatTotal: PropTypes.func,\n    visibility: /*#__PURE__*/PropTypes.oneOf([\"visible\", \"hidden\"]),\n    sort: /*#__PURE__*/PropTypes.oneOf([\"locale\", \"numeric\"]),\n    // column props, affecting colgroup > col tags\n    background: PropTypes.string,\n    border: PropTypes.string,\n    width: /*#__PURE__*/PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    CellComponent: PropTypes.elementType,\n    getCellExtraProps: PropTypes.func\n  })).isRequired,\n  getCellExtraProps: PropTypes.func,\n  totals: /*#__PURE__*/PropTypes.objectOf( // array may contain: \"sum\", \"average\", \"count\", \"max\", \"min\"\n  PropTypes.array),\n  nonSticky: PropTypes.bool,\n  headless: PropTypes.bool,\n  HeaderRowComponent: PropTypes.elementType,\n  CellComponent: PropTypes.elementType,\n  getCellData: PropTypes.func,\n  TotalsCellComponent: PropTypes.elementType,\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nTable.defaultProps = /*#__PURE__*/Object.assign({}, commonDefaultProps, {\n  headless: false,\n  //    For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n  //    If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n  //    memo(observer(RowComponentDefault)) will do the trick.\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault),\n  CellComponent: CellComponentDefault,\n  getCellData: function getCellData(rowData, rowIndex, dataKey) {\n    return rowData[dataKey];\n  },\n  TotalsCellComponent: TotalsCellComponentDefault,\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default /*#__PURE__*/memo(Table);","import createList from \"./createList\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default /*#__PURE__*/createList(FixedSizeScrollableRows);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n\n  var _useApi = useApi(),\n      startIndex = _useApi.startIndex,\n      endIndex = _useApi.endIndex,\n      getRowData = _useApi.getRowData,\n      getRowKey = _useApi.getRowKey;\n\n  return getVisibleRows(startIndex, endIndex, getRowData, getRowKey, getRowExtraProps, RowComponent);\n};\n\nexport default /*#__PURE__*/observer(Rows);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"estimatedRowHeight\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"RowCountWarningContainer\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef, {\n    getRowData: getRowData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeightFallback: estimatedRowHeight,\n    rowCount: rowCount\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      rowsContainerRef = _useStore[2];\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? /*#__PURE__*/Object.assign({}, commonPropTypes, {\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nList.defaultProps = /*#__PURE__*/Object.assign({}, commonDefaultProps, {\n  /*\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n      memo(observer(RowComponentDefault)) will do the trick.\n  */\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault),\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default /*#__PURE__*/memo(List);"],"sourceRoot":""}