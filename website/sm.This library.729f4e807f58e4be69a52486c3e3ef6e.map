{"version":3,"sources":["webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/Context.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/FixedSizeScrollableRows.js","webpack:///./lib/models/ScrollableRowsBase.js","webpack:///./lib/models/VariableSizeScrollableRows.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/common/RowCountWarningContainer.js","webpack:///./lib/useApi/index.js","webpack:///./lib/Table/common/Cell.js","webpack:///./lib/utils/isPositionStickySupported/index.js","webpack:///./lib/models/RowsComplex.js","webpack:///./lib/models/createTable.js","webpack:///./lib/models/FixedSizeTable.js","webpack:///./lib/models/VariableSizeTable.js","webpack:///./lib/Table/common/Row.js","webpack:///./lib/Table/common/TotalsCell.js","webpack:///./lib/Table/common/Colgroup.js","webpack:///./lib/Table/NonSticky/TableWrapper/index.js","webpack:///./lib/Table/common/HeaderCell.js","webpack:///./lib/Table/common/HeaderCells.js","webpack:///./lib/Table/common/Thead.js","webpack:///./lib/Table/common/FooterCells.js","webpack:///./lib/Table/common/Tfoot.js","webpack:///./lib/Table/common/GroupRow.js","webpack:///./lib/Table/common/Rows.js","webpack:///./lib/Table/common/Tbody.js","webpack:///./lib/Table/common/BodyTable.js","webpack:///./lib/Table/NonSticky/useColWidthsResizeObserver/index.js","webpack:///./lib/Table/common/TbodyScroller.js","webpack:///./lib/Table/NonSticky/index.js","webpack:///./lib/Table/Sticky/index.js","webpack:///./lib/Table/index.js","webpack:///./lib/models/RowsSimple.js","webpack:///./lib/models/createList.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/List/index.js","webpack:///./lib/utils/cx/index.js"],"names":["getPropsGetter","propName","data","index","dataIndex","getExtraProps","_props","props","extraProps","Object","assign","getRowProps","getCellProps","createContext","el","React","createElement","className","observer","cloneElement","style","height","useApi","widgetScrollHeight","ScrollContainer","forwardRef","_ref","ref","children","onScroll","_objectWithoutPropertiesLoose","API","scrollHandler","useCallback","e","_e$target","target","scrollTop","scrollLeft","merge","useEffect","current","R","ResizeObserver","entries","length","_entries$0$target","offsetWidth","offsetHeight","widgetHeight","Math","round","widgetWidth","observe","unobserve","_extends","tabIndex","cx","HeightProvider","useStore","StoreConstructor","dataRef","propsToMerge","scrollContainerRef","useRef","rowsContainerRef","finalDataRef","Store","rowsContainerNode","scrollContainerNode","destructor","_class","FixedSizeScrollableRows","_ScrollableRowsBase","apply","this","arguments","_inheritsLoose","_proto","prototype","getVisibleRangeStart","distance","estimatedRowHeight","getDistanceBetweenIndexes","startIndex","endIndex","_createClass","key","get","node","firstElementChild","estimatedRowHeightFallback","set","value","Rows","visibleRowCount","ScrollableRowsBase","_applyDecoratedDescriptor","computed","getOwnPropertyDescriptor","BASIC_OBSERVABLE_FIELDS","rowCount","overscanRowsCount","getRowKey","undefined","getRowData","Error","RowsConstructor","extendObservable","observable","params","newVisibleStartIndex","visibleRangeStart","max","newEndIndex","min","_this$visibleRangeSta2","remainder","overscanOffset","scrollToRow","clamp","scrollToStart","action","VariableSizeScrollableRows","_this","call","rowsDomObserver","MutationObserver","runInAction","lastRowsRenderTimeStamp","performance","now","disposeCallbacks","_assertThisInitialized","shouldResetInvisibleRowHeights","push","reaction","h","fireImmediately","autorun","_assertThisInitialize","_assertThisInitialize2","sTree","N","fill","calculateParentsInRange","delay","disconnect","childList","subtree","newHeight","_assertThisInitialize3","l","r","rowHeightsSum","rowCounter","child","nextElementSibling","parseInt","getAttribute","i","dist","v","nodeIndex","log2","Uint32Array","forEach","cb","res","Component","virtualTopOffset","commonDefaultProps","fixedSize","RowCountWarningContainer","useContext","Context","Cell","rowData","rowIndex","getCellDataDefault","getCellData","column","columnIndex","getCellExtraProps","render","getEmptyCellData","dataKey","format","cellData","propTypes","elStyle","document","cssText","map","p","join","_class2","_descriptor","_descriptor2","_descriptor3","_class4","_descriptor4","isSupported","position","includes","isPositionStickySupported","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","done","TypeError","next","bind","arr","len","arr2","TotalsCachePart","rows","groupPath","countRecursively","byFieldName","group","reduce","totalCount","groupValue","getGroupTotals","concat","_get","grouped","_this$rows","columnsByDataKey","parent","col","fn","sumBy","row","sum","count","Aggregators","_initializerDefineProperty","_proto2","setFiltering","filtersByDataKey","setSorting","sort","hasGroupingForDataKey","groups","addGrouping","removeGrouping","remove","toggleGrouping","toPairs","filter","configurable","enumerable","writable","initializer","getSorter","coef","a","b","ascSorter","objectSetter","nsObject","RowsComplex","aggregators","groupTotals","Map","dispose","expandedGroups","dispose2","clear","_proto3","setExpandedState","boolFlag","setWith","isGroupExpanded","path","_this2","finalPath","totals","mapValues","k","_this3","keyBy","columns","times","filtersList","rowIndexesArray","every","toLowerCase","filtered","acc","updateWith","indexes","flattenGroupedStructure","obj","rowIndexes","groupKeyPaths","stack","_rowIndexes","curStack","_step","_iterator","keys","sorted","flat","createTable","BaseClass","_BaseClass","headlessMode","tbodyColumnWidths","add","Row","CellComponent","getRowExtraProps","rowDataIndex","visibility","FinalCellComponent","Total","cache","showSummaryType","summaryType","summaryName","formatTotal","finalSummaryString","title","TotalsCell","_ref2","cellTotals","totalsCache","defaultProps","useTbodyWidths","_useApi","j","background","border","width","marginLeft","tbodyColumnWidthsSum","Colgroup","colSort","label","searchState","useLocalStore","visible","toggle","altKey","stopPropagation","changeHandler","onClick","onChange","HeaderCell","Thead","trRef","getCellStyle","clickHandler","closest","colIndex","_API$columns$colIndex","ctrlKey","HeaderCells","memo","FooterCells","TotalsCellComponent","curTotals","curTotalsCache","Tfoot","GroupRow","expanded","last","TT","colSpan","paddingLeft","RowComponent","rangeFrom","rangeTo","tmp","idx","result","getVisibleRows","Tbody","tbodyRef","useColWidthsResizeObserver","observerRef","mutationObserverRef","RO","MO","_entries$i","addedNodes","removedNodes","_j","trNode","TbodyScroller","Scroller","widthsObserverRef","TableWrapper","BodyTable","Table","rowCountWarningsTable","headless","nonSticky","_useStore","FixedSizeTableStore","VariableSizeTableStore","ComponentVariant","StickyComponent","NonStickyComponent","Provider","RowComponentDefault","CellComponentDefault","TotalsCellComponentDefault","RowCountWarningContainerDefault","RowsSimple","createList","rowKey","List","_ref$RowComponent","FixedSizeListStore","VariableSizeListStore","baseClass","extraClass"],"mappings":"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","file":"This library.d263716d67331929b4f2.js","sourcesContent":["var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, dataIndex, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index, dataIndex);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = getPropsGetter(\"aria-colindex\");","import { createContext } from \"react\";\nexport default /*#__PURE__*/createContext();","import React, { cloneElement } from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  return /*#__PURE__*/cloneElement(el, {\n    style: {\n      height: useApi().widgetScrollHeight\n    }\n  });\n};\n\nexport default observer(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nvar ScrollContainer = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\"]);\n\n  var API = useApi();\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.merge({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        /*\r\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \r\n            and { box: border-box } option does not work here\r\n        */\n        var _entries$0$target = entries[0].target,\n            offsetWidth = _entries$0$target.offsetWidth,\n            offsetHeight = _entries$0$target.offsetHeight;\n        API.merge({\n          widgetHeight: Math.round(offsetHeight),\n          widgetWidth: Math.round(offsetWidth)\n        });\n      }\n    });\n    R.observe(el);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\r\n      tabIndex=\"0\" is for proper keyboard nav\r\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\r\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","import { useRef, useEffect } from \"react\";\n/*\r\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\r\n    As it is not dom-related, I decided to avoid forwardRef\r\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef, propsToMerge) {\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useEffect(function () {\n    Store.merge(Object.assign({}, propsToMerge, {\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    }));\n  });\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return [Store, scrollContainerRef, rowsContainerRef];\n};\n\nexport default useStore;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { computed } from \"mobx\";\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nvar FixedSizeScrollableRows = (_class = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(FixedSizeScrollableRows, _ScrollableRowsBase);\n\n  function FixedSizeScrollableRows() {\n    return _ScrollableRowsBase.apply(this, arguments) || this;\n  }\n\n  var _proto = FixedSizeScrollableRows.prototype;\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return estimatedRowHeight ? [distance / estimatedRowHeight | 0, distance % estimatedRowHeight] : [0, 0];\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  _createClass(FixedSizeScrollableRows, [{\n    key: \"estimatedRowHeight\",\n    get: function get() {\n      if (this.widgetWidth) {\n        var node = this.rowsContainerNode;\n\n        if (node) {\n          var firstElementChild = node.firstElementChild;\n\n          if (firstElementChild) {\n            return firstElementChild.offsetHeight;\n          }\n        }\n      }\n\n      return this.estimatedRowHeightFallback;\n    },\n    set: function set(value) {\n      this.estimatedRowHeightFallback = value;\n    }\n  }, {\n    key: \"widgetScrollHeight\",\n    get: function get() {\n      return this.estimatedRowHeight * this.Rows.visibleRowCount;\n    }\n  }]);\n\n  return FixedSizeScrollableRows;\n}(ScrollableRowsBase), (_applyDecoratedDescriptor(_class.prototype, \"estimatedRowHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"estimatedRowHeight\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"widgetScrollHeight\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"widgetScrollHeight\"), _class.prototype)), _class);\n;\nexport default FixedSizeScrollableRows;","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { extendObservable, computed, action, observable } from \"mobx\";\nimport clamp from \"lodash/clamp\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar BASIC_OBSERVABLE_FIELDS = {\n  rowCount: 0,\n  overscanRowsCount: 0,\n  estimatedRowHeightFallback: 0,\n  scrollLeft: 0,\n  scrollTop: 0,\n  widgetHeight: 0,\n  widgetWidth: 0,\n  getRowKey: undefined,\n  getRowData: getRowDataInitial,\n  rowsContainerNode: null,\n  scrollContainerNode: null\n};\nvar END_INDEX_CHECK_INTERVAL = 400;\nvar ScrollableRowsBase = (_class = /*#__PURE__*/function () {\n  var _proto = ScrollableRowsBase.prototype;\n\n  _proto.merge = function merge(params) {\n    Object.assign(this, params);\n  };\n\n  _createClass(ScrollableRowsBase, [{\n    key: \"visibleRangeStart\",\n    get: function get() {\n      return this.getVisibleRangeStart(this.scrollTop);\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$visibleRangeSta = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta[0];\n      return Math.max(0, newVisibleStartIndex - this.overscanRowsCount);\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get() {\n      if (!this.estimatedRowHeight) {\n        return 0;\n      }\n\n      var _this$getVisibleRange = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n          newEndIndex = _this$getVisibleRange[0];\n      /*\r\n          getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\r\n          but for endIndex we need \"<=\", so adding 1 artificially.\r\n      */\n\n\n      return Math.min(newEndIndex + 1 + this.overscanRowsCount, this.Rows.visibleRowCount);\n    }\n  }, {\n    key: \"virtualTopOffset\",\n    get: function get() {\n      var _this$visibleRangeSta2 = this.visibleRangeStart,\n          newVisibleStartIndex = _this$visibleRangeSta2[0],\n          remainder = _this$visibleRangeSta2[1];\n      var overscanOffset = this.getDistanceBetweenIndexes(this.startIndex, newVisibleStartIndex);\n      return this.scrollTop - remainder - overscanOffset;\n    }\n  }]);\n\n  function ScrollableRowsBase(RowsConstructor) {\n    this.Rows = new RowsConstructor(this);\n    extendObservable(this, BASIC_OBSERVABLE_FIELDS, {\n      rowsContainerNode: observable.ref,\n      scrollContainerNode: observable.ref\n    });\n    /*\r\n    this\r\n        .on( \"#widgetScrollHeight\", this.increaseEndIndexIfNeeded )\r\n        .on( \"#endIndex\", this.increaseEndIndexIfNeeded.cancel );\r\n    */\n  }\n  /*\r\n      Column heights may change during scroll/width-change\r\n  */\n\n  /*   increaseEndIndexIfNeededSync(){\r\n         const currentVisibleDist = this.getDistanceBetweenIndexes( this.startIndex, this.endIndex );\r\n         if( this.widgetHeight > this.virtualTopOffset + currentVisibleDist - this.scrollTop ){\r\n             this.updateEndIndex();\r\n         }\r\n     }\r\n  \n     increaseEndIndexIfNeeded = debounce( this.increaseEndIndexIfNeededSync, END_INDEX_CHECK_INTERVAL );\r\n  */\n\n\n  _proto.destructor = function destructor() {// this.increaseEndIndexIfNeeded.cancel();\n  };\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      node.scrollTop = this.getDistanceBetweenIndexes(0, clamp(index, 0, this.Rows.visibleRowCount));\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ScrollableRowsBase;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"visibleRangeStart\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"visibleRangeStart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"startIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"startIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"endIndex\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"endIndex\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"virtualTopOffset\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"virtualTopOffset\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"merge\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"merge\"), _class.prototype)), _class);\n;\nexport default ScrollableRowsBase;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _temp;\n\nimport ScrollableRowsBase from \"./ScrollableRowsBase\";\nimport { observable, extendObservable, computed, autorun, action, runInAction, reaction } from \"mobx\";\n/*\r\n    We should always have some extra space for new rows. We do not want to reallocate cache every time.\r\n*/\n\nvar MIN_TREE_CACHE_OFFSET = 15;\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 200;\nvar VariableSizeScrollableRows = (_class = (_temp = /*#__PURE__*/function (_ScrollableRowsBase) {\n  _inheritsLoose(VariableSizeScrollableRows, _ScrollableRowsBase);\n\n  var _proto = VariableSizeScrollableRows.prototype;\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        sTree[i] = sTree[i << 1] + sTree[i << 1 | 1];\n      }\n    }\n    /* In segments tree 1 node is always sum of all elements */\n\n\n    this.merge({\n      widgetScrollHeight: sTree[1]\n    });\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var widgetScrollHeight = this.widgetScrollHeight,\n        estimatedRowHeight = this.estimatedRowHeight,\n        sTree = this.sTree,\n        N = this.N;\n\n    if (widgetScrollHeight && estimatedRowHeight) {\n      var nodeIndex = 1,\n          v;\n\n      while (nodeIndex < N) {\n        v = sTree[nodeIndex <<= 1];\n\n        if (dist >= v) {\n          dist -= v;\n          nodeIndex |= 1;\n        }\n      }\n\n      return [nodeIndex - N, dist];\n    }\n\n    return [0, 0];\n  };\n\n  _createClass(VariableSizeScrollableRows, [{\n    key: \"N\",\n    get: function get() {\n      /* Nearest pow of 2 to visibleRowCount. 56 >= 64, 67 => 128, etc. */\n      var visibleRowCount = this.Rows.visibleRowCount;\n      return visibleRowCount > 0 ? 2 << Math.log2(visibleRowCount + MIN_TREE_CACHE_OFFSET) : 1;\n    }\n  }, {\n    key: \"sTree\",\n    get: function get() {\n      // Uint16 cannot be used here, because array stores intermediate sums, which can be huge.\n      if (process.env.NODE_ENV !== \"production\") {\n        console.log(\"New tree cache. Size:\", this.N);\n      }\n\n      return new Uint32Array(this.N << 1);\n    }\n  }]);\n\n  function VariableSizeScrollableRows(RowsConstructor) {\n    var _this;\n\n    _this = _ScrollableRowsBase.call(this, RowsConstructor) || this;\n    _this.rowsDomObserver = new MutationObserver(function () {\n      return runInAction(function () {\n        _this.lastRowsRenderTimeStamp = performance.now();\n      });\n    });\n    _this.disposeCallbacks = [];\n    extendObservable(_assertThisInitialized(_this), {\n      estimatedRowHeight: 0,\n      widgetScrollHeight: 0,\n      lastRowsRenderTimeStamp: 0,\n\n      /*\r\n          When all row heights are different,\r\n          we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\r\n          basing on what we know: heights between startIndex and endIndex.\r\n          Using simple average by default.\r\n      */\n      shouldResetInvisibleRowHeights: true\n    });\n\n    _this.disposeCallbacks.push(reaction(function () {\n      return _this.estimatedRowHeightFallback;\n    }, function (h) {\n      if (!_this.estimatedRowHeight) {\n        _this.estimatedRowHeight = h;\n      }\n    }, {\n      fireImmediately: true\n    }), autorun(function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          rowCount = _assertThisInitialize.rowCount,\n          estimatedRowHeight = _assertThisInitialize.estimatedRowHeight; //superdirty\n\n\n      if (!estimatedRowHeight || !rowCount) {\n        return;\n      }\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          sTree = _assertThisInitialize2.sTree,\n          N = _assertThisInitialize2.N,\n          visibleRowCount = _assertThisInitialize2.Rows.visibleRowCount;\n\n      sTree.fill(estimatedRowHeight, N, N + visibleRowCount);\n      /*\r\n          Trees are not always ideally allocated, gaps are possible.\r\n          Classical way for calculating parents is much simpler,\r\n          but can do much more work(summing zeros) in such conditions. Commented classic algo:\r\n                        for( let i = N + visibleRowCount >> 1, j; i > 0; --i ){\r\n              j = i << 1;\r\n              sTree[ i ] = sTree[ j ] + sTree[ j | 1 ];\r\n          }\r\n      */\n\n      _this.calculateParentsInRange(0, visibleRowCount);\n    }), autorun(function () {\n      if (_this.widgetWidth) {\n        _this.merge({\n          shouldResetInvisibleRowHeights: true\n        });\n      }\n    }, {\n      delay: 200\n    }), autorun(function () {\n      _this.rowsDomObserver.disconnect();\n\n      if (_this.rowsContainerNode) {\n        _this.rowsDomObserver.observe(_this.rowsContainerNode, {\n          childList: true,\n          subtree: true\n        });\n      }\n    }), autorun(function () {\n      var node = _this.rowsContainerNode;\n\n      if (node && _this.lastRowsRenderTimeStamp) {\n        var _assertThisInitialize3 = _assertThisInitialized(_this),\n            sTree = _assertThisInitialize3.sTree,\n            N = _assertThisInitialize3.N;\n\n        var l = -1,\n            r = -1,\n            rowHeightsSum = 0,\n            rowCounter = 0;\n        /*\r\n            Some benchmarks inspire me to use nextElementSibling\r\n            https://jsperf.com/nextsibling-vs-childnodes-increment/2\r\n        */\n\n        for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n          /*\r\n              * aria-rowindex is counted from 1 according to w3c spec;\r\n              * parseInt with radix is 2x faster, then +, -, etc.\r\n                  https://jsperf.com/number-vs-parseint-vs-plus/116\r\n          */\n          index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n          if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n            throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n          }\n\n          newHeight = child.offsetHeight;\n          rowHeightsSum += newHeight;\n\n          if (sTree[N + index] !== newHeight) {\n            // console.log( \"%d| was: %d; is: %d\", index, sTree[N+index],newHeight)\n            sTree[N + index] = newHeight;\n\n            if (l === -1) {\n              l = index;\n            }\n\n            r = index;\n          }\n        }\n\n        if (l !== -1) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.log(\"Updating heights in range: %d - %d\", l, r);\n          }\n\n          if (_this.shouldResetInvisibleRowHeights) {\n            _this.merge({\n              estimatedRowHeight: Math.round(rowHeightsSum / rowCounter),\n              shouldResetInvisibleRowHeights: false\n            });\n          } else {\n            _this.calculateParentsInRange(l, r);\n          }\n        }\n      }\n    }, {\n      delay: ROW_MEASUREMENT_DEBOUNCE_INTERVAL\n    }));\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.disposeCallbacks.forEach(function (cb) {\n      return cb();\n    });\n\n    _ScrollableRowsBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    if (!this.estimatedRowHeight) {\n      return 0;\n    }\n\n    var sTree = this.sTree,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += sTree[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += sTree[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  return VariableSizeScrollableRows;\n}(ScrollableRowsBase), _temp), (_applyDecoratedDescriptor(_class.prototype, \"N\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"N\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sTree\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"sTree\"), _class.prototype)), _class);\n;\nexport default VariableSizeScrollableRows;","import React from \"react\";\nimport useApi from \"../useApi\";\nimport { observer } from \"mobx-react-lite\";\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApi = useApi(),\n      virtualTopOffset = _useApi.virtualTopOffset;\n  /*\r\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default observer(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rowCount: 0,\n  overscanRowsCount: 4,\n  estimatedRowHeight: 16\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport cx from \"../utils/cx\";\n\nvar RowCountWarningContainer = function RowCountWarningContainer(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-row-count-warning-container\", className)\n  }, props));\n};\n\nexport default RowCountWarningContainer;","import { useContext } from \"react\";\nimport Context from \"../Context\";\n\nvar useApi = function useApi() {\n  return useContext(Context);\n};\n\nexport default useApi;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCellProps } from \"../../utils/extraPropsGetters\";\n/*\r\n    If all cells in a row would be completely empty - row can \"collapse\" short.\r\n    To prevent it we can fill it with &nbsp;\r\n*/\n\nvar DEFAULT_EMPTY_CELL_CONTENT = \"\\xA0\";\n\nvar Cell = function Cell(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      getCellDataDefault = _ref.getCellData,\n      column = _ref.column,\n      columnIndex = _ref.columnIndex,\n      getCellExtraProps = _ref.getCellExtraProps;\n  var render = column.render,\n      getEmptyCellData = column.getEmptyCellData,\n      dataKey = column.dataKey,\n      format = column.format,\n      getCellData = column.getCellData;\n  var cellData = rowData && (getCellData || getCellDataDefault)(rowData, rowIndex, dataKey);\n\n  if (cellData === undefined || cellData === \"\") {\n    cellData = getEmptyCellData ? getEmptyCellData(rowIndex, column) : DEFAULT_EMPTY_CELL_CONTENT;\n  } else {\n    if (format) {\n      cellData = format(cellData, rowData);\n    }\n\n    if (render) {\n      cellData = render(cellData, rowData, column);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", getCellProps(rowData, columnIndex, columnIndex, getCellExtraProps), cellData);\n};\n\nCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getCellData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  columnIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  rowData: PropTypes.object,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Cell;","var elStyle = document.createElement(\"a\").style;\nelStyle.cssText = [\"\", \"-webkit-\", \"-ms-\"].map(function (p) {\n  return \"position:\" + p + \"sticky\";\n}).join(\";\");\nvar isSupported = elStyle.position.includes(\"sticky\");\n\nvar isPositionStickySupported = function isPositionStickySupported() {\n  return isSupported;\n};\n\nexport default isPositionStickySupported;","import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp, _class4, _descriptor4, _temp2;\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { computed, action, reaction, autorun, toJS, observable } from \"mobx\";\nimport mapValues from \"lodash/mapValues\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\nimport reduce from \"lodash/reduce\";\nimport toPairs from \"lodash/toPairs\";\nimport updateWith from \"lodash/updateWith\";\nimport _get from \"lodash/get\";\nimport setWith from \"lodash/setWith\";\nimport sumBy from \"lodash/sumBy\";\nvar TotalsCachePart = (_class = /*#__PURE__*/function () {\n  function TotalsCachePart(rows, groupPath, dataKey) {\n    this.rows = rows;\n    this.dataKey = dataKey;\n    this.groupPath = groupPath;\n  }\n\n  var _proto = TotalsCachePart.prototype;\n\n  _proto.countRecursively = function countRecursively(byFieldName) {\n    var group = this.group,\n        rows = this.rows,\n        groupPath = this.groupPath,\n        dataKey = this.dataKey;\n    return reduce(group, function (totalCount, groupValue, key) {\n      return totalCount + rows.getGroupTotals(groupPath.concat(key))[dataKey][byFieldName];\n    }, 0);\n  };\n\n  _createClass(TotalsCachePart, [{\n    key: \"group\",\n    get: function get() {\n      return _get(this.rows.grouped, this.groupPath);\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return Array.isArray(this.group) ? this.group.length : this.countRecursively(\"count\");\n    }\n  }, {\n    key: \"sum\",\n    get: function get() {\n      if (Array.isArray(this.group)) {\n        var _this$rows = this.rows,\n            columnsByDataKey = _this$rows.columnsByDataKey,\n            parent = _this$rows.parent,\n            dataKey = this.dataKey;\n        var col = columnsByDataKey[dataKey];\n        var getCellData = parent.getCellData,\n            getRowData = parent.getRowData;\n        var fn = col.getCellData || getCellData;\n        return sumBy(this.group, function (i) {\n          var row = getRowData(i);\n          return fn(row, i, dataKey);\n        });\n      }\n\n      return this.countRecursively(\"sum\");\n    }\n  }, {\n    key: \"average\",\n    get: function get() {\n      return this.sum / this.count;\n    }\n  }]);\n\n  return TotalsCachePart;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"group\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"group\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"count\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"count\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sum\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"sum\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"average\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"average\"), _class.prototype)), _class);\n;\n/*\r\n\r\n[\r\n    [\r\n        1,\r\n        2,\r\n        5,\r\n        7,\r\n        8\r\n    ],\r\n    [\r\n        3,\r\n        10,\r\n        18\r\n    ]\r\n]\r\n*/\n\nvar Aggregators = (_class2 = (_temp = /*#__PURE__*/function () {\n  function Aggregators() {\n    _initializerDefineProperty(this, \"filtersByDataKey\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"groups\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"sort\", _descriptor3, this);\n  }\n\n  var _proto2 = Aggregators.prototype;\n\n  _proto2.setFiltering = function setFiltering(dataKey, value) {\n    this.filtersByDataKey[dataKey] = value;\n  };\n\n  _proto2.setSorting = function setSorting(v) {\n    this.sort = typeof v === \"function\" ? v(this.sort) : v;\n  };\n\n  _proto2.hasGroupingForDataKey = function hasGroupingForDataKey(dataKey) {\n    return this.groups.includes(dataKey);\n  };\n\n  _proto2.addGrouping = function addGrouping(dataKey) {\n    if (!this.hasGroupingForDataKey(dataKey)) {\n      this.groups.push(dataKey);\n    }\n  };\n\n  _proto2.removeGrouping = function removeGrouping(dataKey) {\n    this.groups.remove(dataKey);\n  };\n\n  _proto2.toggleGrouping = function toggleGrouping(dataKey) {\n    if (this.hasGroupingForDataKey(dataKey)) {\n      this.removeGrouping(dataKey);\n    } else {\n      this.addGrouping(dataKey);\n    }\n  };\n\n  _createClass(Aggregators, [{\n    key: \"filtersList\",\n    get: function get() {\n      return toPairs(this.filtersByDataKey).filter(function (p) {\n        return p[1];\n      });\n    }\n  }]);\n\n  return Aggregators;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"filtersByDataKey\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"groups\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"filtersList\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"filtersList\"), _class2.prototype), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"sort\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"setFiltering\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"setFiltering\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"setSorting\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"setSorting\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"addGrouping\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"addGrouping\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"removeGrouping\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"removeGrouping\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"toggleGrouping\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"toggleGrouping\"), _class2.prototype)), _class2);\n;\n\nvar getSorter = function getSorter(coef) {\n  return function (a, b) {\n    if (a > b) {\n      return coef;\n    }\n\n    if (a < b) {\n      return -coef;\n    }\n\n    return 0;\n  };\n};\n\nvar ascSorter = getSorter(1);\nvar descSorter = getSorter(-1);\n\nvar objectSetter = function objectSetter(nsObject) {\n  return typeof nsObject === \"object\" ? nsObject : {};\n};\n\nvar flattenGroupedStructure = function flattenGroupedStructure(obj, expandedGroups, rowIndexes, groupKeyPaths, stack) {\n  if (rowIndexes === void 0) {\n    rowIndexes = [];\n  }\n\n  if (groupKeyPaths === void 0) {\n    groupKeyPaths = [];\n  }\n\n  if (stack === void 0) {\n    stack = [];\n  }\n\n  if (Array.isArray(obj)) {\n    var _rowIndexes;\n\n    (_rowIndexes = rowIndexes).push.apply(_rowIndexes, obj);\n  } else {\n    var curStack;\n    var sortedKeys = Object.keys(obj).sort(ascSorter);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(sortedKeys), _step; !(_step = _iterator()).done;) {\n      var k = _step.value;\n      curStack = stack.concat(k);\n      rowIndexes.push(-groupKeyPaths.push(curStack));\n\n      if (!!_get(expandedGroups, curStack)) {\n        flattenGroupedStructure(obj[k], expandedGroups, rowIndexes, groupKeyPaths, curStack);\n      }\n    }\n  }\n\n  return {\n    rowIndexes: rowIndexes,\n    groupKeyPaths: groupKeyPaths\n  };\n};\n\nvar RowsComplex = (_class4 = (_temp2 = /*#__PURE__*/function () {\n  function RowsComplex(parent) {\n    var _this = this;\n\n    _initializerDefineProperty(this, \"expandedGroups\", _descriptor4, this);\n\n    this.aggregators = new Aggregators();\n    this.groupTotals = new Map();\n    this.parent = parent;\n    this.dispose = reaction(function () {\n      return !!_this.aggregators.groups.length;\n    }, function () {\n      return _this.expandedGroups = {};\n    });\n    this.dispose2 = autorun(function () {\n      if (_this.parent.rowCount && _this.grouped) {\n        _this.groupTotals.clear();\n      }\n    });\n  }\n\n  var _proto3 = RowsComplex.prototype;\n\n  _proto3.destructor = function destructor() {\n    this.dispose();\n    this.dispose2();\n  };\n\n  _proto3.setExpandedState = function setExpandedState(v, boolFlag) {\n    setWith(this.expandedGroups, v, boolFlag, objectSetter);\n  };\n\n  _proto3.isGroupExpanded = function isGroupExpanded(path) {\n    return !!_get(this.expandedGroups, path);\n  };\n\n  _proto3.getGroupTotals = function getGroupTotals(path) {\n    var _this2 = this;\n\n    var finalPath = path.join(\".\");\n    var res = this.groupTotals.get(finalPath);\n\n    if (!res) {\n      res = this.parent.totals ? mapValues(this.parent.totals, function (v, k) {\n        return new TotalsCachePart(_this2, path, k);\n      }) : {};\n      this.groupTotals.set(finalPath, res);\n    }\n\n    return res;\n  };\n\n  _createClass(RowsComplex, [{\n    key: \"totalsCache\",\n    get: function get() {\n      var _this3 = this;\n\n      return this.parent.totals ? mapValues(this.parent.totals, function (v, k) {\n        return new TotalsCachePart(_this3, [], k);\n      }) : {};\n    }\n  }, {\n    key: \"columnsByDataKey\",\n    get: function get() {\n      return keyBy(this.parent.columns, \"dataKey\");\n    }\n  }, {\n    key: \"rowIndexesArray\",\n    get: function get() {\n      return times(this.parent.rowCount);\n    }\n  }, {\n    key: \"filtered\",\n    get: function get() {\n      var columnsByDataKey = this.columnsByDataKey,\n          parent = this.parent;\n      var getCellData = parent.getCellData,\n          getRowData = parent.getRowData;\n      var filtersList = this.aggregators.filtersList;\n\n      if (!getCellData || !filtersList.length) {\n        return this.rowIndexesArray;\n      }\n\n      return this.rowIndexesArray.filter(function (i) {\n        var row = getRowData(i);\n        return filtersList.every(function (_ref) {\n          var dataKey = _ref[0],\n              value = _ref[1];\n          var col = columnsByDataKey[dataKey];\n          var cellData = row && (col.getCellData || getCellData)(row, i, dataKey);\n          return cellData === undefined || (\"\" + cellData).toLowerCase().includes(value.toLowerCase());\n        });\n      });\n    }\n  }, {\n    key: \"grouped\",\n    get: function get() {\n      var groups = this.aggregators.groups;\n\n      if (!groups.length) {\n        return this.filtered;\n      }\n\n      var columnsByDataKey = this.columnsByDataKey,\n          parent = this.parent;\n      var getCellData = parent.getCellData,\n          getRowData = parent.getRowData;\n      /* multilevel grouping */\n\n      return this.filtered.reduce(function (acc, v) {\n        var row = getRowData(v);\n        return updateWith(acc, row && groups.map(function (dataKey) {\n          var col = columnsByDataKey[dataKey];\n          return (col.getCellData || getCellData)(row, v, dataKey);\n        }), function (indexes) {\n          return indexes ? indexes.push(v) && indexes : [v];\n        }, objectSetter);\n      }, {});\n    }\n  }, {\n    key: \"sorted\",\n    get: function get() {\n      var columnsByDataKey = this.columnsByDataKey,\n          sort = this.aggregators.sort,\n          parent = this.parent;\n      /* if( sort && sort.dataKey ){\r\n           const { dataKey, value } = sort;\r\n           const { getCellData, getRowData } = parent;\r\n           const col = columnsByDataKey[ dataKey ];\r\n           const fn = col.getCellData || getCellData;\r\n           const sign = value === \"ascending\" ? 1 : -1;\r\n           return mapValues( this.grouped, v => v.sort(( a, b ) => {\r\n               const row1 = getRowData( a );\r\n               const row2 = getRowData( b );\r\n               if( !row1 || !row2 ){\r\n                   return 0;\r\n               }\r\n               const cell1 = fn( row1, a, dataKey );\r\n               const cell2 = fn( row2, b, dataKey );\r\n               if( cell1 > cell2 ){\r\n                   return sign;\r\n               }\r\n               if( cell1 < cell2 ){\r\n                   return -sign;\r\n               }\r\n               return 0;\r\n           }));\r\n       }*/\n\n      return this.grouped;\n    }\n  }, {\n    key: \"flat\",\n    get: function get() {\n      return flattenGroupedStructure(this.sorted, this.expandedGroups);\n    }\n  }, {\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.parent.rowCount && this.flat.rowIndexes.length;\n    }\n  }]);\n\n  return RowsComplex;\n}(), _temp2), (_applyDecoratedDescriptor(_class4.prototype, \"setExpandedState\", [action], Object.getOwnPropertyDescriptor(_class4.prototype, \"setExpandedState\"), _class4.prototype), _descriptor4 = _applyDecoratedDescriptor(_class4.prototype, \"expandedGroups\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class4.prototype, \"totalsCache\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"totalsCache\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"columnsByDataKey\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"columnsByDataKey\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"rowIndexesArray\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"rowIndexesArray\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"filtered\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"filtered\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"grouped\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"grouped\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"sorted\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"sorted\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"flat\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"flat\"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, \"visibleRowCount\", [computed], Object.getOwnPropertyDescriptor(_class4.prototype, \"visibleRowCount\"), _class4.prototype)), _class4);\nexport default RowsComplex;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport { extendObservable, reaction, computed } from \"mobx\";\nimport add from \"lodash/add\";\nimport RowsComplex from \"./RowsComplex\";\n/*\r\n    can't extend from both FixedSizeList and VariableSizeList, so exporting compositor\r\n*/\n\nvar createTable = function createTable(BaseClass) {\n  var _class;\n\n  return _class = /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_class, _BaseClass);\n\n    _createClass(_class, [{\n      key: \"tbodyColumnWidthsSum\",\n      get: function get() {\n        return this.tbodyColumnWidths.reduce(add);\n      }\n    }]);\n\n    function _class() {\n      var _this;\n\n      _this = _BaseClass.call(this, RowsComplex) || this;\n      extendObservable(_assertThisInitialized(_this), {\n        columns: [],\n        totals: {},\n        headlessMode: false,\n        getCellData: null,\n        tbodyColumnWidths: []\n      });\n      _this.dispose = reaction(function () {\n        return _this.Rows.sorted;\n      }, function () {\n        return _this.scrollToStart();\n      });\n      return _this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.destructor = function destructor() {\n      this.Rows.destructor();\n      this.dispose();\n\n      _BaseClass.prototype.destructor.call(this);\n    };\n\n    return _class;\n  }(BaseClass), (_applyDecoratedDescriptor(_class.prototype, \"tbodyColumnWidthsSum\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"tbodyColumnWidthsSum\"), _class.prototype)), _class;\n};\n\nexport default createTable;","import createTable from \"./createTable\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default createTable(FixedSizeScrollableRows);","import createTable from \"./createTable\";\nimport VariableSizeScrollableRows from \"./VariableSizeScrollableRows\";\nexport default createTable(VariableSizeScrollableRows);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var columns = _ref.columns,\n      CellComponent = _ref.CellComponent,\n      getRowData = _ref.getRowData,\n      getCellData = _ref.getCellData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowDataIndex = _ref.rowDataIndex,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowDataIndex);\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(rowData, rowIndex, rowDataIndex, getRowExtraProps), columns.map(function (column, columnIndex) {\n    if (column.visibility === \"hidden\") {\n      return null;\n    }\n\n    var FinalCellComponent = column.CellComponent || CellComponent;\n    return /*#__PURE__*/React.createElement(FinalCellComponent, {\n      key: column.dataKey,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      column: column,\n      columnIndex: columnIndex,\n      getCellData: getCellData,\n      getCellExtraProps: column.getCellExtraProps || getCellExtraProps\n    });\n  }));\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getCellData: PropTypes.func.isRequired,\n  columns: PropTypes.array.isRequired,\n  CellComponent: PropTypes.elementType.isRequired,\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowDataIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nvar NBSP = \"\\xA0\";\nvar Total = observer(function (_ref) {\n  var cache = _ref.cache,\n      showSummaryType = _ref.showSummaryType,\n      summaryType = _ref.summaryType,\n      summaryName = _ref.summaryName,\n      formatTotal = _ref.formatTotal;\n  var res = cache[summaryType];\n  var finalSummaryString = summaryName;\n\n  if (showSummaryType) {\n    finalSummaryString += NBSP + summaryType;\n  }\n\n  if (finalSummaryString) {\n    finalSummaryString += \":\" + NBSP;\n  }\n\n  finalSummaryString += formatTotal ? formatTotal(res) : res;\n  return res !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    key: summaryType,\n    title: summaryType,\n    className: \"afvscr-summary\"\n  }, finalSummaryString) : null;\n});\n\nvar TotalsCell = function TotalsCell(_ref2) {\n  var cellTotals = _ref2.cellTotals,\n      totalsCache = _ref2.totalsCache,\n      summaryName = _ref2.summaryName,\n      formatTotal = _ref2.formatTotal;\n\n  if (!cellTotals || !totalsCache) {\n    return null;\n  }\n\n  if (cellTotals.length === 1) {\n    return /*#__PURE__*/React.createElement(Total, {\n      summaryType: cellTotals[0],\n      summaryName: summaryName,\n      cache: totalsCache,\n      formatTotal: formatTotal\n    });\n  }\n\n  return cellTotals.map(function (summaryType) {\n    return /*#__PURE__*/React.createElement(Total, {\n      key: summaryType,\n      showSummaryType: true,\n      summaryType: summaryType,\n      summaryName: summaryName,\n      cache: totalsCache,\n      formatTotal: formatTotal\n    });\n  });\n};\n\nTotalsCell.defaultProps = {\n  summaryName: \"\"\n};\nexport default observer(TotalsCell);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar Colgroup = function Colgroup(_ref) {\n  var useTbodyWidths = _ref.useTbodyWidths;\n\n  var _useApi = useApi(),\n      columns = _useApi.columns,\n      tbodyColumnWidths = _useApi.tbodyColumnWidths;\n\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        background = _ref2.background,\n        visibility = _ref2.visibility,\n        border = _ref2.border,\n        width = _ref2.width;\n    return visibility !== \"hidden\" ? /*#__PURE__*/React.createElement(\"col\", {\n      key: dataKey,\n      style: {\n        width: useTbodyWidths ? tbodyColumnWidths[j] : width,\n        background: background,\n        border: border\n      }\n    }) : null;\n  }));\n};\n\nexport default observer(Colgroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../../useApi\";\nimport Colgroup from \"../../common/Colgroup\";\nimport cx from \"../../../utils/cx\";\n\nvar TableWrapper = function TableWrapper(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\"]);\n\n  var _useApi = useApi(),\n      scrollLeft = _useApi.scrollLeft,\n      columns = _useApi.columns,\n      tbodyColumnWidthsSum = _useApi.tbodyColumnWidthsSum;\n\n  var style = {\n    /* If we do this via transform translate, col background would have bugs during horizontal scroll. Strange webkit behavior */\n    marginLeft: -scrollLeft,\n    width: tbodyColumnWidthsSum\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: cx(\"afvscr-nonst-subtable\", className)\n  }, props, {\n    style: style,\n    \"aria-colcount\": columns.length\n  }), /*#__PURE__*/React.createElement(Colgroup, {\n    useTbodyWidths: true\n  }), children);\n};\n\nexport default observer(TableWrapper);","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nimport { observer, useLocalStore } from \"mobx-react-lite\";\nimport { reaction } from \"mobx\";\n\nvar HeaderCell = function HeaderCell(_ref) {\n  var column = _ref.column,\n      index = _ref.index;\n\n  var _useApi = useApi(),\n      aggregators = _useApi.Rows.aggregators;\n\n  var sort = aggregators.sort;\n  var colSort = column.sort,\n      label = column.label,\n      title = column.title,\n      dataKey = column.dataKey;\n  var searchState = useLocalStore(function () {\n    return {\n      value: aggregators.filtersByDataKey[dataKey] || \"\",\n      visible: false,\n      toggle: function toggle(e) {\n        if (e.altKey) {\n          e.stopPropagation();\n          searchState.visible = !searchState.visible;\n        }\n      },\n      changeHandler: function changeHandler(e) {\n        searchState.value = e.target.value;\n      }\n    };\n  });\n  useEffect(function () {\n    return reaction(function () {\n      return searchState.value;\n    }, function (v) {\n      return aggregators.setFiltering(dataKey, v);\n    }, {\n      delay: 300\n    });\n  }, [dataKey]);\n  return /*#__PURE__*/React.createElement(\"th\", {\n    title: title,\n    \"data-sortable\": colSort ? \"\" : undefined,\n    \"aria-colindex\": index + 1,\n    \"aria-sort\": sort && sort.dataKey === dataKey ? sort.value : \"none\",\n    onClick: searchState.toggle\n  }, label, searchState.visible ? /*#__PURE__*/React.createElement(\"input\", {\n    value: searchState.value,\n    onChange: searchState.changeHandler\n  }) : null);\n};\n\nexport default observer(HeaderCell);","import React from \"react\";\nimport useApi from \"../../useApi\";\nimport { observer } from \"mobx-react-lite\";\nimport HeaderCell from \"./HeaderCell\";\n\nvar HeaderCells = function HeaderCells() {\n  return useApi().columns.map(function (column, j) {\n    return /*#__PURE__*/React.createElement(HeaderCell, {\n      key: column.dataKey,\n      column: column,\n      index: j\n    });\n  });\n};\n\nexport default observer(HeaderCells);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback, memo } from \"react\";\nimport HeaderCells from \"./HeaderCells\";\nimport useApi from \"../../useApi\";\n\nvar Thead = function Thead(_ref) {\n  var trRef = _ref.trRef,\n      getCellStyle = _ref.getCellStyle,\n      props = _objectWithoutPropertiesLoose(_ref, [\"trRef\", \"getCellStyle\"]);\n\n  var API = useApi();\n  var clickHandler = useCallback(function (e) {\n    var node = e.target.closest(\"[aria-colindex]\");\n\n    if (process.env.NODE_ENV !== \"production\" && !node) {\n      throw new Error(\"colIndex attr missing\");\n    }\n\n    var colIndex = parseInt(node.getAttribute(\"aria-colindex\"), 10) - 1;\n    var _API$columns$colIndex = API.columns[colIndex],\n        sort = _API$columns$colIndex.sort,\n        dataKey = _API$columns$colIndex.dataKey;\n\n    if (e.ctrlKey) {\n      API.Rows.aggregators.toggleGrouping(dataKey);\n    } else if (sort) {\n      var value = node.getAttribute(\"aria-sort\") === \"ascending\" ? \"descending\" : \"ascending\";\n      API.Rows.aggregators.setSorting({\n        dataKey: dataKey,\n        value: value\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"thead\", _extends({}, props, {\n    onClick: clickHandler\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(HeaderCells, null)));\n};\n\nexport default /*#__PURE__*/memo(Thead);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\n\nvar FooterCells = function FooterCells(_ref) {\n  var TotalsCellComponent = _ref.TotalsCellComponent;\n\n  var _useApi = useApi(),\n      columns = _useApi.columns,\n      totals = _useApi.totals,\n      totalsCache = _useApi.Rows.totalsCache;\n\n  return columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        formatTotal = _ref2.formatTotal,\n        visibility = _ref2.visibility;\n\n    if (visibility === \"hidden\") {\n      return null;\n    }\n\n    var curTotals = totals && totals[dataKey];\n    var curTotalsCache = totalsCache[dataKey];\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: dataKey,\n      \"aria-colindex\": j + 1\n    }, /*#__PURE__*/React.createElement(TotalsCellComponent, {\n      cellTotals: curTotals,\n      totalsCache: curTotalsCache,\n      formatTotal: formatTotal\n    }));\n  });\n};\n\nFooterCells.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  TotalsCellComponent: PropTypes.elementType.isRequired\n} : {};\nexport default observer(FooterCells);","import React, { memo } from \"react\";\nimport FooterCells from \"./FooterCells\";\n\nvar Tfoot = function Tfoot(_ref) {\n  var className = _ref.className,\n      trRef = _ref.trRef,\n      TotalsCellComponent = _ref.TotalsCellComponent;\n  return /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(FooterCells, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default /*#__PURE__*/memo(Tfoot);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\nimport TotalsCell from \"./TotalsCell\";\n\nvar GroupRow = function GroupRow(_ref) {\n  var columns = _ref.columns,\n      groupPath = _ref.groupPath,\n      rowIndex = _ref.rowIndex;\n\n  var _useApi = useApi(),\n      totals = _useApi.totals,\n      Rows = _useApi.Rows;\n\n  var expanded = Rows.isGroupExpanded(groupPath);\n  var last = groupPath.length - 1;\n  var TT = Rows.getGroupTotals(groupPath);\n  var label = Rows.columnsByDataKey[Rows.aggregators.groups[last]].label;\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(null, rowIndex), /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: columns.length,\n    className: \"afvscr-group-cell\",\n    style: {\n      paddingLeft: (groupPath.length - 1) * 1.5 + \"em\"\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return Rows.setExpandedState(groupPath, !expanded);\n    }\n  }, expanded ? \"-\" : \"+\"), \"\\xA0\", label, \":\\xA0\", groupPath[last], /*#__PURE__*/React.createElement(\"div\", {\n    className: \"afvscr-group-summaries\"\n  }, columns.map(function (_ref2) {\n    var dataKey = _ref2.dataKey,\n        formatTotal = _ref2.formatTotal;\n    return /*#__PURE__*/React.createElement(TotalsCell, {\n      key: dataKey,\n      summaryName: dataKey,\n      cellTotals: totals && totals[dataKey],\n      totalsCache: TT[dataKey],\n      formatTotal: formatTotal\n    });\n  }))));\n};\n\nGroupRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  columns: PropTypes.array.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  groupPath: PropTypes.array.isRequired\n} : {};\nexport default observer(GroupRow);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\nimport GroupRow from \"./GroupRow\";\n\nvar getVisibleRows = function getVisibleRows(_ref, rangeFrom, rangeTo, columns, getRowData, getCellData, getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent) {\n  var rowIndexes = _ref.rowIndexes,\n      groupKeyPaths = _ref.groupKeyPaths;\n  var result = [];\n\n  for (var tmp, idx; rangeFrom < rangeTo; rangeFrom++) {\n    idx = rowIndexes[rangeFrom];\n\n    if (idx >= 0) {\n      tmp = getRowKey ? getRowKey(idx) : idx;\n      result.push( /*#__PURE__*/React.createElement(RowComponent, {\n        getRowExtraProps: getRowExtraProps,\n        getCellExtraProps: getCellExtraProps,\n        rowIndex: rangeFrom,\n        rowDataIndex: idx,\n        key: tmp,\n        columns: columns,\n        getRowData: getRowData,\n        getCellData: getCellData,\n        CellComponent: CellComponent\n      }));\n    } else {\n      tmp = groupKeyPaths[~idx];\n      result.push( /*#__PURE__*/React.createElement(GroupRow, {\n        key: \"group_\" + tmp.join(\"/\"),\n        groupPath: tmp,\n        columns: columns,\n        rowIndex: rangeFrom\n      }));\n    }\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref2) {\n  var getRowExtraProps = _ref2.getRowExtraProps,\n      getCellExtraProps = _ref2.getCellExtraProps,\n      RowComponent = _ref2.RowComponent,\n      CellComponent = _ref2.CellComponent;\n  var API = useApi();\n  return getVisibleRows(API.Rows.flat, API.startIndex, API.endIndex, API.columns, API.getRowData, API.getCellData, API.getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent);\n};\n\nexport default observer(Rows);","import React, { memo } from \"react\";\nimport Rows from \"./Rows\";\n\nvar Tbody = function Tbody(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      tbodyRef = _ref.tbodyRef,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tbodyRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }));\n};\n\nexport default /*#__PURE__*/memo(Tbody);","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar BodyTable = function BodyTable(_ref) {\n  var children = _ref.children;\n  var API = useApi();\n  return /*#__PURE__*/React.createElement(\"table\", {\n    children: children,\n    className: \"afvscr-main-table\",\n    \"aria-rowcount\": API.rowCount,\n    \"aria-colcount\": API.columns.length\n  });\n};\n\nexport default observer(BodyTable);","import { useRef, useEffect, useCallback } from \"react\";\n\nvar useColWidthsResizeObserver = function useColWidthsResizeObserver(API) {\n  var observerRef = useRef();\n  var mutationObserverRef = useRef();\n  var RO = observerRef.current;\n  var MO = mutationObserverRef.current;\n\n  if (!RO) {\n    RO = observerRef.current = new ResizeObserver(function (entries) {\n      for (var j = 0, colIndex; j < entries.length; j++) {\n        var target = entries[j].target;\n        colIndex = parseInt(target.getAttribute(\"aria-colindex\"));\n        /*\r\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \r\n            and { box: border-box } option does not work here\r\n        */\n\n        API.tbodyColumnWidths[colIndex - 1] = Math.round(target.offsetWidth);\n      }\n    });\n    MO = mutationObserverRef.current = new MutationObserver(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        var _entries$i = entries[i],\n            addedNodes = _entries$i.addedNodes,\n            removedNodes = _entries$i.removedNodes;\n\n        for (var j = 0; j < addedNodes.length; j++) {\n          RO.observe(addedNodes[j]);\n        }\n\n        for (var _j = 0; _j < removedNodes.length; _j++) {\n          RO.unobserve(removedNodes[_j]);\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    return function () {\n      RO.disconnect();\n      MO.disconnect();\n    };\n  }, []);\n  /* callback ref */\n\n  return useCallback(function (trNode) {\n    MO.disconnect();\n    RO.disconnect();\n\n    if (trNode) {\n      MO.observe(trNode, {\n        childList: true\n      });\n    }\n  }, []);\n};\n\nexport default useColWidthsResizeObserver;","import React from \"react\";\nimport Scroller from \"../../common/Scroller\";\n/*\r\n    According to specs, tr must always be inside tbody, thead or tfoot                \r\n*/\n\nvar TbodyScroller = function TbodyScroller() {\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"tr\"\n  }));\n};\n\nexport default TbodyScroller;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nimport TableWrapper from \"./TableWrapper\";\nimport Thead from \"../common/Thead\";\nimport Tfoot from \"../common/Tfoot\";\nimport Tbody from \"../common/Tbody\";\nimport BodyTable from \"../common/BodyTable\";\nimport useColWidthsResizeObserver from \"./useColWidthsResizeObserver\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport cx from \"../../utils/cx\";\n\nvar NonSticky = function NonSticky(_ref) {\n  var className = _ref.className,\n      tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"onScroll\"]);\n\n  var API = useApi();\n  var headlessMode = API.headlessMode,\n      totals = API.totals;\n  /*\r\n      Hidden tfoot & thead are needed to 'hold' widths of tbody columns no to be narrower than real thead/tfoot\r\n      and notify model about columns width changes.\r\n      There are 3 tables rendered in this mode, so their column widths need to be synced somehow.\r\n  */\n\n  var widthsObserverRef = useColWidthsResizeObserver(API);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (headlessMode && !totals) {\n      console.warn(\"NonSticky table is rendered without headers and footers. This is not ok.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-nonst\", className)\n  }, props), headlessMode ? null : /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Thead, null)), /*#__PURE__*/React.createElement(ScrollContainer, {\n    ref: scrollContainerRef,\n    onScroll: onScroll\n  }, /*#__PURE__*/React.createElement(BodyTable, null, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, {\n    className: \"afvscr-hdnwrp\",\n    trRef: widthsObserverRef\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent,\n    className: \"afvscr-hdnwrp\",\n    trRef: headlessMode ? widthsObserverRef : undefined\n  }), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }))), totals && /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default observer(NonSticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport Thead from \"../common/Thead\";\nimport Tbody from \"../common/Tbody\";\nimport Tfoot from \"../common/Tfoot\";\nimport BodyTable from \"../common/BodyTable\";\nimport useApi from \"../../useApi\";\nimport cx from \"../../utils/cx\";\n/*\r\n    Todo:\r\n        measure thead & tfoot heights in order to properly calculate available space for rows\r\n*/\n\nvar Sticky = function Sticky(_ref) {\n  var tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"className\"]);\n\n  var _useApi = useApi(),\n      headlessMode = _useApi.headlessMode,\n      totals = _useApi.totals;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    /*\r\n        https://bugs.chromium.org/p/chromium/issues/detail?id=702927\r\n    */\n    var areTotalsPresent = totals && totals.length !== 0;\n    useEffect(function () {\n      if (!headlessMode || areTotalsPresent) {\n        /* TODO: tests fail without this if */\n        if (scrollContainerRef.current) {\n          var table = scrollContainerRef.current.querySelector(\"table\");\n          var tableStyle = getComputedStyle(table);\n\n          if (tableStyle.borderCollapse === \"collapse\") {\n            console.warn(\"You use sticky table version. Due to special border behavior when scrolling, use border-collpase: separate.%o\", \"https://bugs.chromium.org/p/chromium/issues/detail?id=702927\");\n          }\n        }\n      }\n    }, [headlessMode, areTotalsPresent]);\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    ref: scrollContainerRef,\n    className: cx(\"afvscr-st\", className)\n  }, props), /*#__PURE__*/React.createElement(BodyTable, null, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, null), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default observer(Sticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isPositionStickySupported from \"../utils/isPositionStickySupported\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport FixedSizeTableStore from \"../models/FixedSizeTable\";\nimport VariableSizeTableStore from \"../models/VariableSizeTable\";\nimport RowComponentDefault from \"./common/Row\";\nimport CellComponentDefault from \"./common/Cell\";\nimport TotalsCellComponentDefault from \"./common/TotalsCell\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport NonStickyComponent from \"./NonSticky\";\nimport StickyComponent from \"./Sticky\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar Table = function Table(_ref) {\n  var fixedSize = _ref.fixedSize,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      columns = _ref.columns,\n      totals = _ref.totals,\n      getRowData = _ref.getRowData,\n      getCellData = _ref.getCellData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      headless = _ref.headless,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      dataRef = _ref.dataRef,\n      nonSticky = _ref.nonSticky,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"estimatedRowHeight\", \"columns\", \"totals\", \"getRowData\", \"getCellData\", \"getRowKey\", \"getRowExtraProps\", \"getCellExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"headless\", \"RowCountWarningContainer\", \"dataRef\", \"nonSticky\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeTableStore : VariableSizeTableStore, dataRef, {\n    headlessMode: headless,\n    getRowData: getRowData,\n    getCellData: getCellData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeight: estimatedRowHeight,\n    totals: totals,\n    columns: columns,\n    rowCount: rowCount\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      tbodyRef = _useStore[2];\n  /*\r\n      Only cells inside thead/tfoot can be sticky.\r\n      If thead/tfoot are hidden - we can easily render lighter StickyComponent to avoid extra wrappers\r\n  */\n\n\n  var ComponentVariant = headless && !totals || !nonSticky && isPositionStickySupported() ? StickyComponent : NonStickyComponent;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ComponentVariant, _extends({\n    className: cx(\"afvscr-table-wrapper\", className),\n    scrollContainerRef: scrollContainerRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    tbodyRef: tbodyRef\n  }, props)) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    // unique key for column\n    dataKey: PropTypes.string.isRequired,\n    // for details see CellComponent implementation\n    getCellData: PropTypes.func,\n    getEmptyCellData: PropTypes.func,\n    format: PropTypes.func,\n    render: PropTypes.func,\n    formatTotal: PropTypes.func,\n    visibility: PropTypes.oneOf([\"visible\", \"hidden\"]),\n    sort: PropTypes.oneOf([\"locale\", \"numeric\"]),\n    // column props, affecting colgroup > col tags\n    background: PropTypes.string,\n    border: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    CellComponent: PropTypes.elementType,\n    getCellExtraProps: PropTypes.func\n  })).isRequired,\n  getCellExtraProps: PropTypes.func,\n  totals: PropTypes.objectOf( // array may contain: \"sum\", \"average\", \"count\", \"max\", \"min\"\n  PropTypes.array),\n  nonSticky: PropTypes.bool,\n  headless: PropTypes.bool,\n  HeaderRowComponent: PropTypes.elementType,\n  CellComponent: PropTypes.elementType,\n  getCellData: PropTypes.func,\n  TotalsCellComponent: PropTypes.elementType,\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nTable.defaultProps = Object.assign({}, commonDefaultProps, {\n  headless: false,\n  //    For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n  //    If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n  //    memo(observer(RowComponentDefault)) will do the trick.\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault),\n  CellComponent: CellComponentDefault,\n  getCellData: function getCellData(rowData, rowIndex, dataKey) {\n    return rowData[dataKey];\n  },\n  TotalsCellComponent: TotalsCellComponentDefault,\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default /*#__PURE__*/memo(Table);","import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { computed } from \"mobx\";\nimport groupBy from \"lodash/groupBy\";\nimport keyBy from \"lodash/keyBy\";\nimport times from \"lodash/times\";\n\nvar RowsSimple = /*#__PURE__*/function () {\n  function RowsSimple(parent) {\n    this.parent = parent;\n  }\n\n  _createClass(RowsSimple, [{\n    key: \"visibleRowCount\",\n    get: function get() {\n      return this.parent.rowCount;\n    }\n  }]);\n\n  return RowsSimple;\n}();\n\nexport default RowsSimple;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport RowsSimple from \"./RowsSimple\";\n\nvar createList = function createList(BaseClass) {\n  return /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_class, _BaseClass);\n\n    function _class() {\n      return _BaseClass.call(this, RowsSimple) || this;\n    }\n\n    return _class;\n  }(BaseClass);\n};\n\nexport default createList;","import createList from \"./createList\";\nimport VariableSizeScrollableRows from \"./VariableSizeScrollableRows\";\nexport default createList(VariableSizeScrollableRows);","import createList from \"./createList\";\nimport FixedSizeScrollableRows from \"./FixedSizeScrollableRows\";\nexport default createList(FixedSizeScrollableRows);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport useApi from \"../../useApi\";\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n\n  var _useApi = useApi(),\n      startIndex = _useApi.startIndex,\n      endIndex = _useApi.endIndex,\n      getRowData = _useApi.getRowData,\n      getRowKey = _useApi.getRowKey;\n\n  return getVisibleRows(startIndex, endIndex, getRowData, getRowKey, getRowExtraProps, RowComponent);\n};\n\nexport default observer(Rows);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      estimatedRowHeight = _ref.estimatedRowHeight,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"estimatedRowHeight\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"RowCountWarningContainer\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var _useStore = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef, {\n    getRowData: getRowData,\n    getRowKey: getRowKey,\n    overscanRowsCount: overscanRowsCount,\n    estimatedRowHeightFallback: estimatedRowHeight,\n    rowCount: rowCount\n  }),\n      Store = _useStore[0],\n      scrollContainerRef = _useStore[1],\n      rowsContainerRef = _useStore[2];\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\r\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\r\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\r\n      memo(observer(RowComponentDefault)) will do the trick.\r\n  */\n  RowComponent: /*#__PURE__*/memo(RowComponentDefault),\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default /*#__PURE__*/memo(List);","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;"],"sourceRoot":""}