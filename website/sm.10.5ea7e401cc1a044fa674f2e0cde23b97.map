{"version":3,"sources":["webpack:///./websiteSrc/examples/list/withFeatures.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./node_modules/lodash/random.js","webpack:///./node_modules/lodash/_baseRandom.js"],"names":["wrapperCss","heights","times","r","getRowData","index","style","lineHeight","borderTop","background","ListWithScrollToRowButton","className","dataRef","useRef","css","onSubmit","e","preventDefault","v","currentTarget","elements","scrollRow","value","current","scrollToRow","name","type","defaultValue","rowCount","eq","isArrayLike","isIndex","isObject","module","exports","object","length","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","Math","min","nativeRandom","random","lower","upper","floating","undefined","temp","rand","nativeFloor","floor"],"mappings":";wIAMA,IAAMA,EAAa,CAAH,2FAOVC,EAAUC,IAFC,KAEgB,kBAAMC,IAAG,GAAI,QAExCC,EAAa,SAAAC,GAAK,OACpB,mBAAKC,MAAO,CACRC,WAAeN,EAAQI,GAAb,KACVG,UAAW,iBACXC,WAAY,OAAON,IAAE,EAAE,KAAb,IAAqBA,IAAE,GAAG,IAA1B,KAAkCA,IAAE,GAAG,IAAvC,OAHd,MAKQE,EALR,KAKsBJ,EAAQI,GAL9B,OA2CWK,UAlCmB,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UAE3BC,EAAUC,mBAQhB,OACI,mBAAKC,IAAKd,EAAYW,UAAWA,GAC7B,oBAAMI,SARQ,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAIF,EAAEG,cAAcC,SAASC,UAAUC,MAC7CV,EAAQW,QAAQC,aAAcN,KAMtB,iCAEI,qBACIO,KAAK,YACLC,KAAK,SACLC,aAAa,OAGrB,sBAAQD,KAAK,UAAb,WAIJ,YAAC,IAAD,CACId,QAASA,EACTR,WAAYA,EACZwB,SA1CC,S,mBCXjB,IAAIC,EAAK,EAAQ,IACbC,EAAc,EAAQ,IACtBC,EAAU,EAAQ,IAClBC,EAAW,EAAQ,IA0BvBC,EAAOC,QAdP,SAAwBZ,EAAOjB,EAAO8B,GACpC,IAAKH,EAASG,GACZ,OAAO,EAET,IAAIT,SAAcrB,EAClB,SAAY,UAARqB,EACKI,EAAYK,IAAWJ,EAAQ1B,EAAO8B,EAAOC,QACrC,UAARV,GAAoBrB,KAAS8B,IAE7BN,EAAGM,EAAO9B,GAAQiB,K,mBCxB7B,IAAIe,EAAa,EAAQ,IACrBC,EAAiB,EAAQ,IACzBC,EAAW,EAAQ,IAGnBC,EAAiBC,WAGjBC,EAAYC,KAAKC,IACjBC,EAAeF,KAAKG,OAwExBb,EAAOC,QAvCP,SAAgBa,EAAOC,EAAOC,GA2B5B,GA1BIA,GAA+B,kBAAZA,GAAyBX,EAAeS,EAAOC,EAAOC,KAC3ED,EAAQC,OAAWC,QAEJA,IAAbD,IACkB,kBAATD,GACTC,EAAWD,EACXA,OAAQE,GAEe,kBAATH,IACdE,EAAWF,EACXA,OAAQG,SAGEA,IAAVH,QAAiCG,IAAVF,GACzBD,EAAQ,EACRC,EAAQ,IAGRD,EAAQR,EAASQ,QACHG,IAAVF,GACFA,EAAQD,EACRA,EAAQ,GAERC,EAAQT,EAASS,IAGjBD,EAAQC,EAAO,CACjB,IAAIG,EAAOJ,EACXA,EAAQC,EACRA,EAAQG,EAEV,GAAIF,GAAYF,EAAQ,GAAKC,EAAQ,EAAG,CACtC,IAAII,EAAOP,IACX,OAAOH,EAAUK,EAASK,GAAQJ,EAAQD,EAAQP,EAAe,QAAUY,EAAO,IAAIhB,OAAS,KAAOY,GAExG,OAAOX,EAAWU,EAAOC,K,iBC7E3B,IAAIK,EAAcV,KAAKW,MACnBT,EAAeF,KAAKG,OAexBb,EAAOC,QAJP,SAAoBa,EAAOC,GACzB,OAAOD,EAAQM,EAAYR,KAAkBG,EAAQD,EAAQ","file":"10.99c46df202fe2a192187.js","sourcesContent":["import React, { useRef } from \"react\";\nimport List from \"af-virtual-scroll/lib/List\";\nimport r from \"lodash/random\";\nimport times from \"lodash/times\";\nimport { css } from \"@emotion/core\";\n\nconst wrapperCss = css`\n    display: flex;\n    flex-flow: column nowrap;\n`;\n\nconst rowCount = 100000;\n\nconst heights = times( rowCount, () => r( 50, 250 ) );\n\nconst getRowData = index => (\n    <div style={{\n        lineHeight: `${heights[index]}px`,\n        borderTop: \"1px solid #666\",\n        background: `hsl(${r(0,360)},${r(30,80)}%,${r(30,80)}%)`\n    }}>\n        row{index}:&nbsp;{heights[index]}px\n    </div>\n);\n\nconst ListWithScrollToRowButton = ({ className }) => {\n\n    const dataRef = useRef();\n\n    const submitHandler = e => {\n        e.preventDefault();\n        const v = e.currentTarget.elements.scrollRow.value;\n        dataRef.current.scrollToRow( +v );\n    };\n\n    return (\n        <div css={wrapperCss} className={className}>\n            <form onSubmit={submitHandler}>\n                <label>\n                    Row:&nbsp;\n                    <input\n                        name=\"scrollRow\"\n                        type=\"number\"\n                        defaultValue=\"0\"\n                    />\n                </label>\n                <button type=\"submit\">\n                    Scroll\n                </button>\n            </form>\n            <List\n                dataRef={dataRef}\n                getRowData={getRowData}\n                rowCount={rowCount}\n            />\n        </div>\n    );\n};\n\nexport default ListWithScrollToRowButton;","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n"],"sourceRoot":""}