{"version":3,"sources":["webpack:///./websiteSrc/examples/list/simple.js","webpack:///./node_modules/lodash/groupBy.js"],"names":["getRowData","index","SimpleList","className","fixedSize","rowCount","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","key","call","push","module","exports"],"mappings":";qEAAA,+BAGMA,EAAa,SAAAC,GAAK,aAAWA,GAWpBC,UATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACf,YAAC,IAAD,CACIC,WAAS,EACTD,UAAWA,EACXH,WAAYA,EACZK,SAAU,Q,mBCVlB,IAAIC,EAAkB,EAAQ,IAC1BC,EAAmB,EAAQ,KAM3BC,EAHcC,OAAOC,UAGQF,eAyB7BG,EAAUJ,GAAiB,SAASK,EAAQC,EAAOC,GACjDN,EAAeO,KAAKH,EAAQE,GAC9BF,EAAOE,GAAKE,KAAKH,GAEjBP,EAAgBM,EAAQE,EAAK,CAACD,OAIlCI,EAAOC,QAAUP","file":"19.9f229d2bf6e69d5ce689.js","sourcesContent":["import React from \"react\";\r\nimport List from \"af-virtual-scroll/lib/List\";\r\n\r\nconst getRowData = index => `row ${index}`;\r\n\r\nconst SimpleList = ({ className }) => (\r\n    <List\r\n        fixedSize\r\n        className={className}\r\n        getRowData={getRowData}\r\n        rowCount={500000}\r\n    />\r\n);\r\n\r\nexport default SimpleList;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n"],"sourceRoot":""}