{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/lodash/_baseRandom.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/af-tools/lib/eventEmitters/Basic.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/random.js","webpack:///./node_modules/lodash/_isIterateeCall.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","nativeFloor","Math","floor","nativeRandom","random","module","exports","lower","upper","isFunction","isLength","value","length","isObject","isSymbol","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","BasicEventEmitter","this","_T","_proto","_a","eventName","fn","prepend","on","prependListener","off","eventsQueue","idx","indexOf","splice","emit","j","call","removeAllListeners","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","toNumber","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","min","floating","undefined","temp","rand","eq","isArrayLike","isIndex","index","object","type"],"mappings":"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","file":"1.1afd627b96b856d71c17.js","sourcesContent":["export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var BasicEventEmitter = /*#__PURE__*/function () {\n  function BasicEventEmitter() {\n    this._T = Object.create(null);\n  }\n\n  var _proto = BasicEventEmitter.prototype;\n\n  _proto._a = function _a(eventName, fn, prepend) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!eventName || !fn) {\n        console.log(eventName, fn);\n        throw new Error(\"Wrong eventName/fn provided\");\n      }\n    }\n\n    var eventsQueue = this._T[eventName] || (this._T[eventName] = []);\n    eventsQueue[prepend ? \"unshift\" : \"push\"](fn);\n    return this;\n  };\n\n  _proto.on = function on(eventName, fn) {\n    return this._a(eventName, fn, false);\n  };\n\n  _proto.prependListener = function prependListener(eventName, fn) {\n    return this._a(eventName, fn, true);\n  };\n\n  _proto.off = function off(eventName, fn) {\n    var eventsQueue = this._T[eventName];\n\n    if (eventsQueue) {\n      var idx = eventsQueue.indexOf(fn);\n\n      if (idx !== -1) {\n        eventsQueue.splice(idx, 1);\n      }\n    }\n\n    return this;\n  };\n\n  _proto.emit = function emit(eventName) {\n    var eventsQueue = this._T[eventName];\n\n    if (eventsQueue) {\n      for (var j = 0; j < eventsQueue.length; j++) {\n        eventsQueue[j].call(this);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventName) {\n    if (eventName) {\n      this._T[eventName] = [];\n    } else {\n      this._T = Object.create(null);\n    }\n\n    return this;\n  };\n\n  return BasicEventEmitter;\n}();\n\nexport default BasicEventEmitter;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"],"sourceRoot":""}